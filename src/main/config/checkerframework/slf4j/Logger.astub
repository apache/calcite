/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.slf4j;

import org.checkerframework.checker.nullness.qual.*;

interface Logger {
  public void trace(String format, @Nullable Object arg);

  public void trace(String format, @Nullable Object arg1, @Nullable Object arg2);

  public void trace(String format, @Nullable Object... arguments);

  public void trace(String msg, @Nullable Throwable t);

  public void trace(Marker marker, String format, @Nullable Object arg);

  public void trace(Marker marker, String format, @Nullable Object arg1, @Nullable Object arg2);

  public void trace(Marker marker, String format, @Nullable Object... arguments);

  public void trace(Marker marker, String msg, @Nullable Throwable t);

  public void debug(String format, @Nullable Object arg);

  public void debug(String format, @Nullable Object arg1, @Nullable Object arg2);

  public void debug(String format, @Nullable Object... arguments);

  public void debug(String msg, @Nullable Throwable t);

  public void debug(Marker marker, String format, @Nullable Object arg);

  public void debug(Marker marker, String format, @Nullable Object arg1, @Nullable Object arg2);

  public void debug(Marker marker, String format, @Nullable Object... arguments);

  public void debug(Marker marker, String msg, @Nullable Throwable t);

  public void info(String format, @Nullable Object arg);

  public void info(String format, @Nullable Object arg1, @Nullable Object arg2);

  public void info(String format, @Nullable Object... arguments);

  public void info(String msg, @Nullable Throwable t);

  public void info(Marker marker, String format, @Nullable Object arg);

  public void info(Marker marker, String format, @Nullable Object arg1, @Nullable Object arg2);

  public void info(Marker marker, String format, @Nullable Object... arguments);

  public void info(Marker marker, String msg, @Nullable Throwable t);

  public void warn(String format, @Nullable Object arg);

  public void warn(String format, @Nullable Object arg1, @Nullable Object arg2);

  public void warn(String format, @Nullable Object... arguments);

  public void warn(String msg, @Nullable Throwable t);

  public void warn(Marker marker, String format, @Nullable Object arg);

  public void warn(Marker marker, String format, @Nullable Object arg1, @Nullable Object arg2);

  public void warn(Marker marker, String format, @Nullable Object... arguments);

  public void warn(Marker marker, String msg, @Nullable Throwable t);

  public void error(String format, @Nullable Object arg);

  public void error(String format, @Nullable Object arg1, @Nullable Object arg2);

  public void error(String format, @Nullable Object... arguments);

  public void error(String msg, @Nullable Throwable t);

  public void error(Marker marker, String format, @Nullable Object arg);

  public void error(Marker marker, String format, @Nullable Object arg1, @Nullable Object arg2);

  public void error(Marker marker, String format, @Nullable Object... arguments);

  public void error(Marker marker, String msg, @Nullable Throwable t);
}
