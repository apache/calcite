<?xml version="1.0" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to you under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<Root>
    <TestCase name="testInOperation">
        <Resource name="sql">
            <![CDATA[select
1 in ('1', '2', '3') as f0,
(1, 2) in (('1', '2')) as f1,
(1, 2) in (('1', '2'), ('3', '4')) as f2
from (values (true, true, true))]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(F0=[true], F1=[true], F2=[true])
  LogicalValues(tuples=[[{ true, true, true }]])
]]>
        </Resource>
    </TestCase>
  <TestCase name="testNotInOperation">
    <Resource name="sql">
      <![CDATA[select
1 not in ('1', '2', '3') as f0,
(1, 2) not in (('1', '2')) as f1,
(1, 2) not in (('1', '2'), ('3', '4')) as f2
from (values (false, false, false))]]>
    </Resource>
    <Resource name="plan">
      <![CDATA[
LogicalProject(F0=[false], F1=[false], F2=[false])
  LogicalValues(tuples=[[{ false, false, false }]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInDateTimestamp">
        <Resource name="sql">
            <![CDATA[select (t1_timestamp, t1_date)
in ((DATE '2020-04-16', TIMESTAMP '2020-04-16 11:40:53'))
from t1]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[AND(=($7, 2020-04-16 00:00:00), =(CAST($8):TIMESTAMP(0) NOT NULL, 2020-04-16 11:40:53))])
  LogicalTableScan(table=[[CATALOG, SALES, T1]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBooleanEquality">
        <Resource name="sql">
            <![CDATA[select
1=true as f0,
1.0=true as f1,
0.0=true=true as f2,
1.23=t1_boolean as f3,
t1_smallint=t1_boolean as f4,
10000000000=true as f5
from t1]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(F0=[true], F1=[true], F2=[false], F3=[NOT($10)], F4=[=($1, CASE($10, 1:SMALLINT, 0:SMALLINT))], F5=[false])
  LogicalTableScan(table=[[CATALOG, SALES, T1]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBinaryComparison">
        <Resource name="sql">
            <![CDATA["select
1<'1' as f0,
1<='1' as f1,
1>'1' as f2,
1>='1' as f3,
1='1' as f4,
t1_date > t1_timestamp as f5,
'2' is not distinct from 2 as f6,
'2019-09-23' between t1_date and t1_timestamp as f7,
cast('2019-09-23' as date) between t1_date and t1_timestamp as f8
from t1]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(F0=[false], F1=[true], F2=[false], F3=[true], F4=[true], F5=[>(CAST($8):TIMESTAMP(0) NOT NULL, $7)], F6=[true], F7=[AND(>=(2019-09-23 00:00:00, CAST($8):TIMESTAMP(0) NOT NULL), <=(2019-09-23 00:00:00, $7))], F8=[AND(>=(2019-09-23 00:00:00, CAST($8):TIMESTAMP(0) NOT NULL), <=(2019-09-23 00:00:00, $7))])
  LogicalTableScan(table=[[CATALOG, SALES, T1]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBuiltinFunctionCoercion">
        <Resource name="sql">
            <![CDATA[select 1||'a' from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[||('1':VARCHAR, 'a')])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testStarImplicitTypeCoercion">
        <Resource name="sql">
            <![CDATA[select * from (values(1, '3')) union select * from (values('2', 4))]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalUnion(all=[false])
  LogicalProject(EXPR$0=[CAST($0):VARCHAR NOT NULL], EXPR$1=[$1])
    LogicalValues(tuples=[[{ 1, '3' }]])
  LogicalProject(EXPR$0=[$0], EXPR$1=[CAST($1):VARCHAR NOT NULL])
    LogicalValues(tuples=[[{ '2', 4 }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testSetOperation">
        <Resource name="sql">
            <![CDATA[select t1_int, t1_decimal, t1_smallint, t1_double from t1
union select t2_varchar20, t2_decimal, t2_float, t2_bigint from t2
union select t1_varchar20, t1_decimal, t1_float, t1_double from t1
union select t2_varchar20, t2_decimal, t2_smallint, t2_double from t2]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalUnion(all=[false])
  LogicalUnion(all=[false])
    LogicalUnion(all=[false])
      LogicalProject(T1_INT=[CAST($2):VARCHAR NOT NULL], T1_DECIMAL=[$6], T1_SMALLINT=[$1], T1_DOUBLE=[$5])
        LogicalTableScan(table=[[CATALOG, SALES, T1]])
      LogicalProject(T2_VARCHAR20=[$0], T2_DECIMAL=[$6], T2_FLOAT=[$4], T2_BIGINT=[$3])
        LogicalTableScan(table=[[CATALOG, SALES, T2]])
    LogicalProject(T1_VARCHAR20=[$0], T1_DECIMAL=[$6], T1_FLOAT=[$4], T1_DOUBLE=[$5])
      LogicalTableScan(table=[[CATALOG, SALES, T1]])
  LogicalProject(T2_VARCHAR20=[$0], T2_DECIMAL=[$6], T2_SMALLINT=[$1], T2_DOUBLE=[$5])
    LogicalTableScan(table=[[CATALOG, SALES, T2]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testCaseWhen">
        <Resource name="sql">
            <![CDATA[select case when 1 > 0 then t2_bigint else t2_decimal end from t2]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[CAST($3):DECIMAL(19, 0) NOT NULL])
  LogicalTableScan(table=[[CATALOG, SALES, T2]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testInsertQuerySourceCoercion">
        <Resource name="sql">
            <![CDATA[insert into t1 select t2_smallint, t2_int, t2_bigint, t2_float,
t2_double, t2_decimal, t2_int, t2_date, t2_timestamp, t2_varchar20, t2_int from t2]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalTableModify(table=[[CATALOG, SALES, T1]], operation=[INSERT], flattened=[false])
  LogicalProject(t1_varchar20=[CAST($1):VARCHAR(20) NOT NULL], t1_smallint=[CAST($2):SMALLINT NOT NULL], t1_int=[CAST($3):INTEGER NOT NULL], t1_bigint=[CAST($4):BIGINT NOT NULL], t1_float=[CAST($5):FLOAT NOT NULL], t1_double=[CAST($6):DOUBLE NOT NULL], t1_decimal=[CAST($2):DECIMAL(19, 0) NOT NULL], t1_timestamp=[CAST($8):TIMESTAMP(0) NOT NULL], t1_date=[CAST($7):DATE NOT NULL], t1_binary=[CAST($0):BINARY(1) NOT NULL], t1_boolean=[<>($2, 0)])
    LogicalTableScan(table=[[CATALOG, SALES, T2]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testUpdateQuerySourceCoercion">
        <Resource name="sql">
            <![CDATA[update t1 set t1_varchar20=123, t1_date=TIMESTAMP '2020-01-03 10:14:34', t1_int=12.3]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalTableModify(table=[[CATALOG, SALES, T1]], operation=[UPDATE], updateColumnList=[[t1_varchar20, t1_date, t1_int]], sourceExpressionList=[[CAST(123):VARCHAR(20) NOT NULL, CAST(2020-01-03 10:14:34):DATE NOT NULL, 12.3]], flattened=[false])
  LogicalProject(t1_varchar20=[$0], t1_smallint=[$1], t1_int=[$2], t1_bigint=[$3], t1_float=[$4], t1_double=[$5], t1_decimal=[$6], t1_timestamp=[$7], t1_date=[$8], t1_binary=[$9], t1_boolean=[$10], EXPR$0=[123], EXPR$1=[2020-01-03 10:14:34], EXPR$2=[12.3:DECIMAL(3, 1)])
    LogicalTableScan(table=[[CATALOG, SALES, T1]])
]]>
        </Resource>
    </TestCase>
</Root>
