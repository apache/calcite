<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
    <TestCase name="testInOperation">
        <Resource name="sql">
            <![CDATA[select 1 in ('1', '2', '3') from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[true])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testInOperation1">
        <Resource name="sql">
            <![CDATA[select (1, 2) in (select '1', '2'
from (values (true, true))) from (values true))]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[CAST(OR(AND(IS NOT NULL($7), <>($1, 0)), AND(<($2, $1), null, <>($1, 0), IS NULL($7)))):BOOLEAN NOT NULL])
  LogicalJoin(condition=[AND(=($3, $5), =($4, $6))], joinType=[left])
    LogicalProject(EXPR$0=[$0], $f0=[$1], $f1=[$2], $f3=[1], $f4=[2])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalValues(tuples=[[{ true }]])
        LogicalAggregate(group=[{}], agg#0=[COUNT()], agg#1=[COUNT($0, $1)])
          LogicalProject(EXPR$0=[1], EXPR$1=[2], $f2=[true])
            LogicalValues(tuples=[[{ true, true }]])
    LogicalAggregate(group=[{0, 1}], agg#0=[MIN($2)])
      LogicalProject(EXPR$0=[1], EXPR$1=[2], $f2=[true])
        LogicalValues(tuples=[[{ true, true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testInOperation2">
        <Resource name="sql">
            <![CDATA[select 1 in ('1', '2', '3') from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[true])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBooleanEquality">
        <Resource name="sql">
            <![CDATA[select 1=true from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[true])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBooleanEquality1">
        <Resource name="sql">
            <![CDATA[select 1.0=true from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[true])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBooleanEquality2">
        <Resource name="sql">
            <![CDATA[select 0.0=true from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[false])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBooleanEquality3">
        <Resource name="sql">
            <![CDATA[select 1.23=t1_boolean from t1]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[NOT($10)])
  LogicalTableScan(table=[[CATALOG, SALES, T1]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBooleanEquality4">
        <Resource name="sql">
            <![CDATA[select t1_smallint=t1_boolean from t1]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[=($1, CASE($10, 1:SMALLINT, 0:SMALLINT))])
  LogicalTableScan(table=[[CATALOG, SALES, T1]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBooleanEquality5">
        <Resource name="sql">
            <![CDATA[select 10000000000=true from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[false])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBinaryComparable">
        <Resource name="sql">
            <![CDATA[select 1<'1' from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[false])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBinaryComparable1">
        <Resource name="sql">
            <![CDATA[select 1<='1' from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[true])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBinaryComparable2">
        <Resource name="sql">
            <![CDATA[select 1>'1' from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[false])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBinaryComparable3">
        <Resource name="sql">
            <![CDATA[select 1>='1' from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[true])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBinaryComparable4">
        <Resource name="sql">
            <![CDATA[select 1='1' from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[true])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBinaryComparable5">
        <Resource name="sql">
            <![CDATA[select t1_date > t1_timestamp from t1]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[>(CAST($8):TIMESTAMP(0) NOT NULL, $7)])
  LogicalTableScan(table=[[CATALOG, SALES, T1]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBinaryComparable6">
        <Resource name="sql">
            <![CDATA[select '2' is not distinct from 2 from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[true])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testBuiltinFunctionCoercion">
        <Resource name="sql">
            <![CDATA[select 1||'a' from (values true)]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[||('1':VARCHAR, 'a')])
  LogicalValues(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testStarImplicitTypeCoercion">
        <Resource name="sql">
            <![CDATA[select * from (values(1, '3')) union select * from (values('2', 4))]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalUnion(all=[false])
  LogicalProject(EXPR$0=[CAST($0):VARCHAR NOT NULL], EXPR$1=[$1])
    LogicalValues(tuples=[[{ 1, '3' }]])
  LogicalProject(EXPR$0=[$0], EXPR$1=[CAST($1):VARCHAR NOT NULL])
    LogicalValues(tuples=[[{ '2', 4 }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testSetOperations">
        <Resource name="sql">
            <![CDATA[select t1_int, t1_decimal, t1_smallint, t1_double from t1
union select t2_varchar20, t2_decimal, t2_float, t2_bigint from t2
union select t1_varchar20, t1_decimal, t1_float, t1_double from t1
union select t2_varchar20, t2_decimal, t2_smallint, t2_double from t2]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalUnion(all=[false])
  LogicalUnion(all=[false])
    LogicalUnion(all=[false])
      LogicalProject(T1_INT=[CAST($2):VARCHAR NOT NULL], T1_DECIMAL=[$6], T1_SMALLINT=[$1], T1_DOUBLE=[$5])
        LogicalTableScan(table=[[CATALOG, SALES, T1]])
      LogicalProject(T2_VARCHAR20=[$0], T2_DECIMAL=[$6], T2_FLOAT=[$4], T2_BIGINT=[$3])
        LogicalTableScan(table=[[CATALOG, SALES, T2]])
    LogicalProject(T1_VARCHAR20=[$0], T1_DECIMAL=[$6], T1_FLOAT=[$4], T1_DOUBLE=[$5])
      LogicalTableScan(table=[[CATALOG, SALES, T1]])
  LogicalProject(T2_VARCHAR20=[$0], T2_DECIMAL=[$6], T2_SMALLINT=[$1], T2_DOUBLE=[$5])
    LogicalTableScan(table=[[CATALOG, SALES, T2]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testCaseWhen">
        <Resource name="sql">
            <![CDATA[select case when 1 > 0 then t2_bigint else t2_decimal end from t2]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
LogicalProject(EXPR$0=[CAST($3):DECIMAL(19, 0) NOT NULL])
  LogicalTableScan(table=[[CATALOG, SALES, T2]])
]]>
        </Resource>
    </TestCase>
</Root>
