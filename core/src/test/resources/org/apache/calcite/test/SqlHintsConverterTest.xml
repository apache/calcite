<?xml version="1.0" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to you under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<Root>
  <TestCase name="testAggregateHints">
    <Resource name="sql">
      <![CDATA[select /*+ AGG_STRATEGY(TWO_PHASE), RESOURCE(mem='1024') */
count(deptno), avg_sal from (
select /*+ AGG_STRATEGY(ONE_PHASE) */ avg(sal) as avg_sal, deptno
from emp group by deptno) group by avg_sal]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[AGG_STRATEGY inheritPath:[] options:[TWO_PHASE]], [RESOURCE inheritPath:[] options:{MEM=1024}]]
Aggregate:[[AGG_STRATEGY inheritPath:[0] options:[TWO_PHASE]], [RESOURCE inheritPath:[0] options:{MEM=1024}]]
Project:[[AGG_STRATEGY inheritPath:[] options:[ONE_PHASE]], [RESOURCE inheritPath:[0, 0] options:{MEM=1024}]]
Aggregate:[[AGG_STRATEGY inheritPath:[0] options:[ONE_PHASE]], [AGG_STRATEGY inheritPath:[0, 0, 0] options:[TWO_PHASE]], [RESOURCE inheritPath:[0, 0, 0] options:{MEM=1024}]]
Project:[[RESOURCE inheritPath:[0, 0, 0, 0] options:{MEM=1024}]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCorrelateHints">
    <Resource name="sql">
      <![CDATA[select /*+ use_hash_join (orders, products_temporal) */ stream *
from orders join products_temporal for system_time as of orders.rowtime
on orders.productid = products_temporal.productid and orders.orderId is not null]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[USE_HASH_JOIN inheritPath:[] options:[ORDERS, PRODUCTS_TEMPORAL]]]
Correlate:[[USE_HASH_JOIN inheritPath:[0] options:[ORDERS, PRODUCTS_TEMPORAL]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCrossCorrelateHints">
    <Resource name="sql">
      <![CDATA[select /*+ use_hash_join (orders, products_temporal) */ stream *
from orders, products_temporal for system_time as of orders.rowtime]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[USE_HASH_JOIN inheritPath:[] options:[ORDERS, PRODUCTS_TEMPORAL]]]
Correlate:[[USE_HASH_JOIN inheritPath:[0] options:[ORDERS, PRODUCTS_TEMPORAL]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFilterHints">
    <Resource name="sql">
      <![CDATA[select /*+ resource(parallelism='3') */ avg(sal) as avg_sal, deptno
from emp group by deptno having avg(sal) > 5000]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[RESOURCE inheritPath:[] options:{PARALLELISM=3}]]
Filter:[[RESOURCE inheritPath:[0] options:{PARALLELISM=3}]]
Aggregate:[[RESOURCE inheritPath:[0, 0] options:{PARALLELISM=3}]]
Project:[[RESOURCE inheritPath:[0, 0, 0] options:{PARALLELISM=3}]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFourLevelNestedQueryHint">
    <Resource name="sql">
      <![CDATA[select /*+ index(idx1), no_hash_join */ * from emp /*+ index(empno) */
e1 join dept/*+ index(deptno) */ d1 on e1.deptno = d1.deptno join
(select max(sal) as sal from emp /*+ index(empno) */) e2 on e1.sal = e2.sal]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[INDEX inheritPath:[] options:[IDX1]], [NO_HASH_JOIN inheritPath:[]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0, 0]]]
TableScan:[[INDEX inheritPath:[] options:[EMPNO]], [INDEX inheritPath:[0, 0, 0] options:[IDX1]]]
TableScan:[[INDEX inheritPath:[] options:[DEPTNO]], [INDEX inheritPath:[0, 0, 1] options:[IDX1]]]
TableScan:[[INDEX inheritPath:[] options:[EMPNO]], [INDEX inheritPath:[0, 1, 0, 0] options:[IDX1]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testHintsInSubQueryWithDecorrelation">
    <Resource name="sql">
      <![CDATA[select /*+ resource(parallelism='3'), AGG_STRATEGY(TWO_PHASE) */
sum(e1.empno) from emp e1, dept d1
where e1.deptno = d1.deptno
and e1.sal> (
select /*+ resource(cpu='2') */ avg(e2.sal) from emp e2 where e2.deptno = d1.deptno)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Aggregate:[[RESOURCE inheritPath:[] options:{PARALLELISM=3}], [AGG_STRATEGY inheritPath:[] options:[TWO_PHASE]]]
Project:[[RESOURCE inheritPath:[0] options:{PARALLELISM=3}]]
Project:[[RESOURCE inheritPath:[0, 0] options:{PARALLELISM=3}]]
Aggregate:[[RESOURCE inheritPath:[] options:{CPU=2}], [RESOURCE inheritPath:[0, 0, 0, 1] options:{PARALLELISM=3}], [AGG_STRATEGY inheritPath:[0, 0, 0, 1] options:[TWO_PHASE]]]
Project:[[RESOURCE inheritPath:[0] options:{CPU=2}], [RESOURCE inheritPath:[0, 0, 0, 1, 0] options:{PARALLELISM=3}]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testHintsInSubQueryWithDecorrelation2">
    <Resource name="sql">
      <![CDATA[select /*+ properties(k1='v1', k2='v2'), index(ename), no_hash_join */
sum(e1.empno) from emp e1, dept d1
where e1.deptno = d1.deptno
and e1.sal> (
select /*+ properties(k1='v1', k2='v2'), index(ename), no_hash_join */
  avg(e2.sal)
  from emp e2
  where e2.deptno = d1.deptno)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Aggregate:[[PROPERTIES inheritPath:[] options:{K1=v1, K2=v2}], [INDEX inheritPath:[] options:[ENAME]], [NO_HASH_JOIN inheritPath:[]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0, 0, 0]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0, 0, 0, 0]]]
TableScan:[[PROPERTIES inheritPath:[0, 0, 0, 0, 0] options:{K1=v1, K2=v2}], [INDEX inheritPath:[0, 0, 0, 0, 0] options:[ENAME]]]
TableScan:[[PROPERTIES inheritPath:[0, 0, 0, 0, 1] options:{K1=v1, K2=v2}], [INDEX inheritPath:[0, 0, 0, 0, 1] options:[ENAME]]]
Aggregate:[[PROPERTIES inheritPath:[] options:{K1=v1, K2=v2}], [INDEX inheritPath:[] options:[ENAME]], [NO_HASH_JOIN inheritPath:[]]]
TableScan:[[PROPERTIES inheritPath:[0, 0] options:{K1=v1, K2=v2}], [INDEX inheritPath:[0, 0] options:[ENAME]], [PROPERTIES inheritPath:[0, 0, 0, 1, 0, 0] options:{K1=v1, K2=v2}], [INDEX inheritPath:[0, 0, 0, 1, 0, 0] options:[ENAME]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testHintsInSubQueryWithDecorrelation3">
    <Resource name="sql">
      <![CDATA[select /*+ resource(parallelism='3'), index(ename), no_hash_join */
sum(e1.empno) from emp e1, dept d1
where e1.deptno = d1.deptno
and e1.sal> (
select /*+ resource(cpu='2'), index(ename), no_hash_join */
  avg(e2.sal)
  from emp e2
  where e2.deptno = d1.deptno)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Aggregate:[[RESOURCE inheritPath:[] options:{PARALLELISM=3}], [INDEX inheritPath:[] options:[ENAME]], [NO_HASH_JOIN inheritPath:[]]]
Project:[[RESOURCE inheritPath:[0] options:{PARALLELISM=3}]]
Project:[[RESOURCE inheritPath:[0, 0] options:{PARALLELISM=3}]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0, 0, 0]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0, 0, 0, 0]]]
TableScan:[[INDEX inheritPath:[0, 0, 0, 0, 0] options:[ENAME]]]
TableScan:[[INDEX inheritPath:[0, 0, 0, 0, 1] options:[ENAME]]]
Aggregate:[[RESOURCE inheritPath:[] options:{CPU=2}], [INDEX inheritPath:[] options:[ENAME]], [NO_HASH_JOIN inheritPath:[]], [RESOURCE inheritPath:[0, 0, 0, 1] options:{PARALLELISM=3}]]
Project:[[RESOURCE inheritPath:[0] options:{CPU=2}], [RESOURCE inheritPath:[0, 0, 0, 1, 0] options:{PARALLELISM=3}]]
TableScan:[[INDEX inheritPath:[0, 0] options:[ENAME]], [INDEX inheritPath:[0, 0, 0, 1, 0, 0] options:[ENAME]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testHintsInSubQueryWithoutDecorrelation">
    <Resource name="sql">
      <![CDATA[select /*+ resource(parallelism='3') */
sum(e1.empno) from emp e1, dept d1
where e1.deptno = d1.deptno
and e1.sal> (
select /*+ resource(cpu='2') */ avg(e2.sal) from emp e2 where e2.deptno = d1.deptno)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Aggregate:[[RESOURCE inheritPath:[] options:{PARALLELISM=3}]]
Project:[[RESOURCE inheritPath:[0] options:{PARALLELISM=3}]]
Filter:[[RESOURCE inheritPath:[0, 0] options:{PARALLELISM=3}]]
Aggregate:[[RESOURCE inheritPath:[] options:{CPU=2}], [RESOURCE inheritPath:[0, 0, 0, 1] options:{PARALLELISM=3}]]
Project:[[RESOURCE inheritPath:[0] options:{CPU=2}], [RESOURCE inheritPath:[0, 0, 0, 1, 0] options:{PARALLELISM=3}]]
Filter:[[RESOURCE inheritPath:[0, 0] options:{CPU=2}], [RESOURCE inheritPath:[0, 0, 0, 1, 0, 0] options:{PARALLELISM=3}]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testHintsPropagationInVolcanoPlannerRules">
    <Resource name="sql">
      <![CDATA[select /*+ use_hash_join(r, s), use_hash_join(emp, dept) */
ename, job, sal, dept.name
from emp join dept on emp.deptno = dept.deptno]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(ENAME=[$1], JOB=[$2], SAL=[$5], NAME=[$10])
  LogicalJoin(condition=[=($7, $9)], joinType=[inner])
    LogicalTableScan(table=[[CATALOG, SALES, EMP]])
    LogicalTableScan(table=[[CATALOG, SALES, DEPT]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
EnumerableProject(ENAME=[$3], JOB=[$4], SAL=[$7], NAME=[$1])
  EnumerableHashJoin(condition=[=($0, $9)], joinType=[inner])
    EnumerableTableScan(table=[[CATALOG, SALES, DEPT]])
    EnumerableTableScan(table=[[CATALOG, SALES, EMP]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testHintsPropagationInVolcanoPlannerRules2">
    <Resource name="sql">
      <![CDATA[select /*+ my_hint */ ename, job
from emp where not exists (select 1 from dept where emp.deptno = dept.deptno)
]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(ENAME=[$0], JOB=[$1])
  LogicalFilter(condition=[IS NULL($4)])
    LogicalJoin(condition=[=($2, $3)], joinType=[left])
      LogicalProject(ENAME=[$1], JOB=[$2], DEPTNO=[$7])
        LogicalTableScan(table=[[CATALOG, SALES, EMP]])
      LogicalAggregate(group=[{0}], agg#0=[MIN($1)])
        LogicalProject(DEPTNO=[$0], $f0=[true])
          LogicalTableScan(table=[[CATALOG, SALES, DEPT]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
EnumerableProject(ENAME=[$0], JOB=[$1])
  EnumerableFilter(condition=[IS NULL($4)])
    EnumerableMergeJoin(condition=[=($2, $3)], joinType=[left])
      EnumerableSort(sort0=[$2], dir0=[ASC])
        EnumerableProject(ENAME=[$1], JOB=[$2], DEPTNO=[$7])
          EnumerableTableScan(table=[[CATALOG, SALES, EMP]])
      EnumerableSort(sort0=[$0], dir0=[ASC])
        EnumerableProject(DEPTNO=[$0], $f0=[true])
          EnumerableTableScan(table=[[CATALOG, SALES, DEPT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testHintsPropagationInVolcanoPlannerRules3">
    <Resource name="sql">
      <![CDATA[select /*+ my_hint */ ename, job
from emp where not exists (select 1 from dept where emp.deptno = dept.deptno) order by ename
]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(ENAME=[$0], JOB=[$1])
    LogicalFilter(condition=[IS NULL($4)])
      LogicalJoin(condition=[=($2, $3)], joinType=[left])
        LogicalProject(ENAME=[$1], JOB=[$2], DEPTNO=[$7])
          LogicalTableScan(table=[[CATALOG, SALES, EMP]])
        LogicalAggregate(group=[{0}], agg#0=[MIN($1)])
          LogicalProject(DEPTNO=[$0], $f0=[true])
            LogicalTableScan(table=[[CATALOG, SALES, DEPT]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
EnumerableSort(sort0=[$0], dir0=[ASC])
  EnumerableProject(ENAME=[$0], JOB=[$1])
    EnumerableFilter(condition=[IS NULL($4)])
      EnumerableMergeJoin(condition=[=($2, $3)], joinType=[left])
        EnumerableSort(sort0=[$2], dir0=[ASC])
          EnumerableProject(ENAME=[$1], JOB=[$2], DEPTNO=[$7])
            EnumerableTableScan(table=[[CATALOG, SALES, EMP]])
        EnumerableSort(sort0=[$0], dir0=[ASC])
          EnumerableProject(DEPTNO=[$0], $f0=[true])
            EnumerableTableScan(table=[[CATALOG, SALES, DEPT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testIntersectHints">
    <Resource name="sql">
      <![CDATA[select /*+ breakable */ deptno from
(select ename, deptno from emp
intersect all
select name, deptno from dept)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[BREAKABLE inheritPath:[]]]
Intersect:[[BREAKABLE inheritPath:[0]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinHintRequiresSpecificInputs">
    <Resource name="sql">
      <![CDATA[select /*+ use_hash_join(r, s), use_hash_join(emp, dept) */
ename, job, sal, dept.name
from emp join dept on emp.deptno = dept.deptno]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[USE_HASH_JOIN inheritPath:[] options:[R, S]], [USE_HASH_JOIN inheritPath:[] options:[EMP, DEPT]]]
LogicalJoin:[[USE_HASH_JOIN inheritPath:[0] options:[EMP, DEPT]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testMinusHints">
    <Resource name="sql">
      <![CDATA[select /*+ breakable */ deptno from
(select ename, deptno from emp
except all
select name, deptno from dept)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[BREAKABLE inheritPath:[]]]
Minus:[[BREAKABLE inheritPath:[0]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testNestedQueryHint">
    <Resource name="sql">
      <![CDATA[select /*+ resource(parallelism='3'), repartition(10) */ empno
from (select /*+ resource(mem='20Mb')*/ empno, ename from emp)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[RESOURCE inheritPath:[] options:{MEM=20Mb}], [RESOURCE inheritPath:[] options:{PARALLELISM=3}], [REPARTITION inheritPath:[] options:[10]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testQueryHint">
    <Resource name="sql">
      <![CDATA[select /*+ properties(k1='v1', k2='v2'), index(ename), no_hash_join */ *
from emp e1
inner join dept d1 on e1.deptno = d1.deptno
inner join emp e2 on e1.ename = e2.job]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[PROPERTIES inheritPath:[] options:{K1=v1, K2=v2}], [INDEX inheritPath:[] options:[ENAME]], [NO_HASH_JOIN inheritPath:[]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0, 0]]]
TableScan:[[PROPERTIES inheritPath:[0, 0, 0] options:{K1=v1, K2=v2}], [INDEX inheritPath:[0, 0, 0] options:[ENAME]]]
TableScan:[[PROPERTIES inheritPath:[0, 0, 1] options:{K1=v1, K2=v2}], [INDEX inheritPath:[0, 0, 1] options:[ENAME]]]
TableScan:[[PROPERTIES inheritPath:[0, 1, 0] options:{K1=v1, K2=v2}], [INDEX inheritPath:[0, 1, 0] options:[ENAME]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testQueryHintWithLiteralOptions">
    <Resource name="sql">
      <![CDATA[select /*+ time_zone(1, 1.23, 'a bc', -1.0) */ *
from emp]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[TIME_ZONE inheritPath:[] options:[1, 1.23, a bc, -1.0]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSameHintsWithDifferentInheritPath">
    <Resource name="sql">
      <![CDATA[select /*+ properties(k1='v1', k2='v2') */
ename, job, sal, dept.name
from emp /*+ index(idx1, idx2) */
join dept /*+ properties(k1='v1', k2='v2') */
on emp.deptno = dept.deptno]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[PROPERTIES inheritPath:[] options:{K1=v1, K2=v2}]]
TableScan:[[INDEX inheritPath:[] options:[IDX1, IDX2]], [PROPERTIES inheritPath:[0, 0] options:{K1=v1, K2=v2}]]
TableScan:[[PROPERTIES inheritPath:[] options:{K1=v1, K2=v2}], [PROPERTIES inheritPath:[0, 1] options:{K1=v1, K2=v2}]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSortHints">
    <Resource name="sql">
      <![CDATA[select /*+ async_merge */ empno from emp order by empno, empno desc]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Sort:[[ASYNC_MERGE inheritPath:[]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testTableHintsInJoin">
    <Resource name="sql">
      <![CDATA[select
ename, job, sal, dept.name
from emp /*+ index(idx1, idx2) */
join dept /*+ properties(k1='v1', k2='v2') */
on emp.deptno = dept.deptno]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
TableScan:[[INDEX inheritPath:[] options:[IDX1, IDX2]]]
TableScan:[[PROPERTIES inheritPath:[] options:{K1=v1, K2=v2}]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testTableHintsInSelect">
    <Resource name="sql">
      <![CDATA[select * from emp /*+ properties(k1='v1', k2='v2'), index(ename), no_hash_join */]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
TableScan:[[PROPERTIES inheritPath:[] options:{K1=v1, K2=v2}], [INDEX inheritPath:[] options:[ENAME]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testThreeLevelNestedQueryHint">
    <Resource name="sql">
      <![CDATA[select /*+ index(idx1), no_hash_join */ * from emp /*+ index(empno) */
e1 join dept/*+ index(deptno) */ d1 on e1.deptno = d1.deptno
join emp e2 on d1.name = e2.job]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[INDEX inheritPath:[] options:[IDX1]], [NO_HASH_JOIN inheritPath:[]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0, 0]]]
TableScan:[[INDEX inheritPath:[] options:[EMPNO]], [INDEX inheritPath:[0, 0, 0] options:[IDX1]]]
TableScan:[[INDEX inheritPath:[] options:[DEPTNO]], [INDEX inheritPath:[0, 0, 1] options:[IDX1]]]
TableScan:[[INDEX inheritPath:[0, 1] options:[IDX1]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testTwoLevelNestedQueryHint">
    <Resource name="sql">
      <![CDATA[select /*+ resource(parallelism='3'), no_hash_join */ empno
from (select /*+ resource(mem='20Mb')*/ empno, ename
from emp left join dept on emp.deptno = dept.deptno)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[RESOURCE inheritPath:[] options:{MEM=20Mb}], [RESOURCE inheritPath:[] options:{PARALLELISM=3}], [NO_HASH_JOIN inheritPath:[]]]
LogicalJoin:[[NO_HASH_JOIN inheritPath:[0]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testUnionHints">
    <Resource name="sql">
      <![CDATA[select /*+ breakable */ deptno from
(select ename, deptno from emp
union all
select name, deptno from dept)]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[BREAKABLE inheritPath:[]]]
Union:[[BREAKABLE inheritPath:[0]]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testUseMergeJoin">
    <Resource name="sql">
      <![CDATA[select /*+ use_merge_join(emp, dept) */
ename, job, sal, dept.name
from emp join dept on emp.deptno = dept.deptno]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
EnumerableProject(ENAME=[$1], JOB=[$2], SAL=[$5], NAME=[$10])
  EnumerableMergeJoin(condition=[=($7, $9)], joinType=[inner])
    EnumerableSort(sort0=[$7], dir0=[ASC])
      EnumerableTableScan(table=[[CATALOG, SALES, EMP]])
    EnumerableSort(sort0=[$0], dir0=[ASC])
      EnumerableTableScan(table=[[CATALOG, SALES, DEPT]])
]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(ENAME=[$1], JOB=[$2], SAL=[$5], NAME=[$10])
  LogicalJoin(condition=[=($7, $9)], joinType=[inner])
    LogicalTableScan(table=[[CATALOG, SALES, EMP]])
    LogicalTableScan(table=[[CATALOG, SALES, DEPT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testValuesHints">
    <Resource name="sql">
      <![CDATA[select /*+ resource(parallelism='3') */ a, max(b), max(b + 1)
from (values (1, 2)) as t(a, b)
group by a]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Aggregate:[[RESOURCE inheritPath:[] options:{PARALLELISM=3}]]
Project:[[RESOURCE inheritPath:[0] options:{PARALLELISM=3}]]
Values:[[RESOURCE inheritPath:[0, 0] options:{PARALLELISM=3}]]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testWindowHints">
    <Resource name="sql">
      <![CDATA[select /*+ mini_batch */ last_value(deptno)
over (order by empno rows 2 following) from emp]]>
    </Resource>
    <Resource name="hints">
      <![CDATA[
Project:[[MINI_BATCH inheritPath:[]]]
]]>
    </Resource>
  </TestCase>
</Root>
