<?xml version="1.0" ?>
<Root>
    <TestCase name="testUnionToDistinctRule">
        <Resource name="sql">
            <![CDATA[select * from dept union select * from dept]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0, 1}])
  UnionRel(all=[true])
    ProjectRel(DEPTNO=[$0], NAME=[$1])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    ProjectRel(DEPTNO=[$0], NAME=[$1])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
UnionRel(all=[false])
  ProjectRel(DEPTNO=[$0], NAME=[$1])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
  ProjectRel(DEPTNO=[$0], NAME=[$1])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testExtractJoinFilterRule">
        <Resource name="sql">
            <![CDATA[select 1 from emp inner join dept on emp.deptno=dept.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[1])
  JoinRel(condition=[=($7, $9)], joinType=[inner])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[1])
  FilterRel(condition=[=($7, $9)])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testAddRedundantSemiJoinRule">
        <Resource name="sql">
            <![CDATA[select 1 from emp inner join dept on emp.deptno = dept.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[1])
  JoinRel(condition=[=($7, $9)], joinType=[inner])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[1])
  JoinRel(condition=[=($7, $9)], joinType=[inner], semiJoinDone=[true])
    SemiJoinRel(condition=[=($7, $9)], joinType=[inner])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushFilterThroughOuterJoin">
        <Resource name="sql">
            <![CDATA[select 1 from sales.dept d left outer join sales.emp e on d.deptno = e.deptno where d.name = 'Charlie']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[1])
  FilterRel(condition=[=($1, 'Charlie')])
    JoinRel(condition=[=($0, $9)], joinType=[left])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[1])
  JoinRel(condition=[=($0, $9)], joinType=[left])
    FilterRel(condition=[=($1, 'Charlie')])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceAverage">
        <Resource name="sql">
            <![CDATA[select name, max(name), avg(deptno), min(name) from sales.dept group by name]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[MAX($0)], EXPR$2=[AVG($1)], EXPR$3=[MIN($0)])
  ProjectRel(NAME=[$1], DEPTNO=[$0])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$0], EXPR$1=[$1], EXPR$2=[CAST(/($2, $3)):INTEGER NOT NULL], EXPR$3=[$4])
  ProjectRel(NAME=[$0], EXPR$1=[$1], $f2=[$2], $f3=[$3], EXPR$3=[$4])
    AggregateRel(group=[{0}], EXPR$1=[MAX($0)], agg#1=[$SUM0($1)], agg#2=[COUNT()], EXPR$3=[MIN($0)])
      ProjectRel(NAME=[$1], DEPTNO=[$0])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushProjectPastFilter">
        <Resource name="sql">
            <![CDATA[select empno + deptno from emp where sal = 10 * comm and upper(ename) = 'FOO']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[+($0, $7)])
  FilterRel(condition=[AND(=($5, *(10, $6)), =(UPPER($1), 'FOO'))])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[+($0, $4)])
  FilterRel(condition=[AND(=($2, *(10, $3)), =(UPPER($1), 'FOO'))])
    ProjectRel(EMPNO=[$0], ENAME=[$1], SAL=[$5], COMM=[$6], DEPTNO=[$7])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushProjectPastJoin">
        <Resource name="sql">
            <![CDATA[select e.sal + b.comm from emp e inner join bonus b on e.ename = b.ename and e.deptno = 10]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[+($5, $12)])
  JoinRel(condition=[AND(=($1, $9), =($7, 10))], joinType=[inner])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, BONUS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[+($1, $4)])
  JoinRel(condition=[AND(=($0, $3), =($2, 10))], joinType=[inner])
    ProjectRel(ENAME=[$1], SAL=[$5], DEPTNO=[$7])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
    ProjectRel(ENAME=[$0], COMM=[$3])
      TableAccessRel(table=[[CATALOG, SALES, BONUS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushProjectPastSetOp">
        <Resource name="sql">
            <![CDATA[select sal from (select * from emp e1 union all select * from emp e2)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(SAL=[$5])
  UnionRel(all=[true])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
UnionRel(all=[true])
  ProjectRel(SAL=[$5])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
  ProjectRel(SAL=[$5])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushJoinThroughUnionOnLeft">
        <Resource name="sql">
            <![CDATA[select r1.sal from (select * from emp e1 union all select * from emp e2) r1, emp r2]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(SAL=[$5])
  JoinRel(condition=[true], joinType=[inner])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(SAL=[$5])
  UnionRel(all=[true])
    JoinRel(condition=[true], joinType=[inner])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
    JoinRel(condition=[true], joinType=[inner])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushJoinThroughUnionOnRight">
        <Resource name="sql">
            <![CDATA[select r1.sal from emp r1, (select * from emp e1 union all select * from emp e2) r2]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(SAL=[$5])
  JoinRel(condition=[true], joinType=[inner])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(SAL=[$5])
  UnionRel(all=[true])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceConstants">
        <Resource name="sql">
            <![CDATA[select 1+2, d.deptno+(3+4), (5+6)+d.deptno, cast(null as integer), coalesce(2,null), row(7+8) from dept d inner join emp e on d.deptno = e.deptno + (5-5) where d.deptno=(7+8) and d.deptno=coalesce(2,null)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[+(1, 2)], EXPR$1=[+($0, +(3, 4))], EXPR$2=[+(+(5, 6), $0)], EXPR$3=[null], EXPR$4=[CASE(IS NOT NULL(2), 2, null)], EXPR$5=[ROW(+(7, 8))])
  FilterRel(condition=[AND(=($0, +(7, 8)), =($0, CASE(IS NOT NULL(2), 2, null)))])
    ProjectRel(DEPTNO=[$0], NAME=[$1], EMPNO=[$2], ENAME=[$3], JOB=[$4], MGR=[$5], HIREDATE=[$6], SAL=[$7], COMM=[$8], DEPTNO0=[$9], SLACKER=[$10])
      JoinRel(condition=[=($0, $11)], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
        ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], $f9=[+($7, -(5, 5))])
          TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[3], EXPR$1=[+($0, 7)], EXPR$2=[+(11, $0)], EXPR$3=[null], EXPR$4=[CAST(2):INTEGER], EXPR$5=[ROW(15)])
  FilterRel(condition=[AND(=($0, 15), =($0, CAST(2):INTEGER))])
    ProjectRel(DEPTNO=[$0], NAME=[$1], EMPNO=[$2], ENAME=[$3], JOB=[$4], MGR=[$5], HIREDATE=[$6], SAL=[$7], COMM=[$8], DEPTNO0=[$9], SLACKER=[$10])
      JoinRel(condition=[=($0, $11)], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
        ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], $f9=[+($7, 0)])
          TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceConstantsEliminatesFilter">
        <Resource name="sql">
            <![CDATA[select * from (values (1,2)) where 1 + 2 > 3 + CAST(NULL AS INTEGER)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[$0], EXPR$1=[$1])
  FilterRel(condition=[>(+(1, 2), +(3, null))])
    ValuesRel(tuples=[[{ 1, 2 }]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[$0], EXPR$1=[$1])
  EmptyRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testAlreadyFalseEliminatesFilter">
        <Resource name="sql">
            <![CDATA[select * from (values (1,2)) where false]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[$0], EXPR$1=[$1])
  FilterRel(condition=[false])
    ValuesRel(tuples=[[{ 1, 2 }]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[$0], EXPR$1=[$1])
  EmptyRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceValuesUnderFilter">
        <Resource name="sql">
            <![CDATA[select a, b from (values (10, 'x'), (20, 'y')) as t(a, b) where a < 15]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(A=[$0], B=[$1])
  FilterRel(condition=[<($0, 15)])
    ValuesRel(tuples=[[{ 10, 'x' }, { 20, 'y' }]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(A=[$0], B=[$1])
  ValuesRel(tuples=[[{ 10, 'x' }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceValuesUnderProject">
        <Resource name="sql">
            <![CDATA[select a + b from (values (10, 1), (20, 3)) as t(a, b)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[+($0, $1)])
  ValuesRel(tuples=[[{ 10, 1 }, { 20, 3 }]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ValuesRel(tuples=[[{ 11 }, { 23 }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceValuesUnderProjectFilter">
        <Resource name="sql">
            <![CDATA[select a + b as x, b, a from (values (10, 1), (30, 7), (20, 3)) as t(a, b) where a - b < 21]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(X=[+($0, $1)], B=[$1], A=[$0])
  FilterRel(condition=[<(-($0, $1), 21)])
    ValuesRel(tuples=[[{ 10, 1 }, { 30, 7 }, { 20, 3 }]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ValuesRel(tuples=[[{ 11, 1, 10 }, { 23, 3, 20 }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceValuesToEmpty">
        <Resource name="sql">
            <![CDATA[select a + b as x, b, a from (values (10, 1), (30, 7)) as t(a, b) where a - b < 0]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(X=[+($0, $1)], B=[$1], A=[$0])
  FilterRel(condition=[<(-($0, $1), 0)])
    ValuesRel(tuples=[[{ 10, 1 }, { 30, 7 }]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
EmptyRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testEmptyFilterProjectUnion">
        <Resource name="sql">
            <![CDATA[select * from (
select * from (values (10, 1), (30, 3)) as t (x, y)
union all
select * from (values (20, 2))
)
where x + y > 30]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(X=[$0], Y=[$1])
  FilterRel(condition=[>(+($0, $1), 30)])
    UnionRel(all=[true])
      ProjectRel(X=[$0], Y=[$1])
        ValuesRel(tuples=[[{ 10, 1 }, { 30, 3 }]])
      ProjectRel(EXPR$0=[$0], EXPR$1=[$1])
        ValuesRel(tuples=[[{ 20, 2 }]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(X=[$0], Y=[$1])
  ValuesRel(tuples=[[{ 30, 3 }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceCasts">
        <Resource name="sql">
            <![CDATA[select cast(d.name as varchar(128)), cast(e.empno as integer) from dept as d inner join emp as e on cast(d.deptno as integer) = cast(e.deptno as integer) where cast(e.job as varchar(1)) = 'Manager']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[CAST($1):VARCHAR(128) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL], EXPR$1=[CAST($2):INTEGER NOT NULL])
  FilterRel(condition=[=(CAST(CAST($4):VARCHAR(1) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL):VARCHAR(7) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL, 'Manager')])
    ProjectRel(DEPTNO=[$0], NAME=[$1], EMPNO=[$3], ENAME=[$4], JOB=[$5], MGR=[$6], HIREDATE=[$7], SAL=[$8], COMM=[$9], DEPTNO0=[$10], SLACKER=[$11])
      JoinRel(condition=[=($2, $12)], joinType=[inner])
        ProjectRel(DEPTNO=[$0], NAME=[$1], $f2=[CAST($0):INTEGER NOT NULL])
          TableAccessRel(table=[[CATALOG, SALES, DEPT]])
        ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], $f9=[CAST($7):INTEGER NOT NULL])
          TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[CAST($1):VARCHAR(128) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL], EXPR$1=[$2])
  FilterRel(condition=[=(CAST(CAST($4):VARCHAR(1) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL):VARCHAR(7) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL, 'Manager')])
    ProjectRel(DEPTNO=[$0], NAME=[$1], EMPNO=[$3], ENAME=[$4], JOB=[$5], MGR=[$6], HIREDATE=[$7], SAL=[$8], COMM=[$9], DEPTNO0=[$10], SLACKER=[$11])
      JoinRel(condition=[=($2, $12)], joinType=[inner])
        ProjectRel(DEPTNO=[$0], NAME=[$1], $f2=[$0])
          TableAccessRel(table=[[CATALOG, SALES, DEPT]])
        ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], $f9=[$7])
          TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushAggThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename,sum(empno),count(*) from (select * from emp as e1 union all select * from emp as e2) group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[COUNT()])
  ProjectRel(ENAME=[$1], EMPNO=[$0])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$0], EXPR$1=[$1], EXPR$2=[CAST($2):BIGINT NOT NULL])
  AggregateRel(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[SUM($2)])
    UnionRel(all=[true])
      AggregateRel(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[COUNT()])
        ProjectRel(ENAME=[$1], EMPNO=[$0])
          ProjectRel(EMPNO=[$0], ENAME=[$1])
            ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
              TableAccessRel(table=[[CATALOG, SALES, EMP]])
      AggregateRel(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[COUNT()])
        ProjectRel(ENAME=[$1], EMPNO=[$0])
          ProjectRel(EMPNO=[$0], ENAME=[$1])
            ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
              TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceCastAndConsts">
        <Resource name="sql">
            <![CDATA[select * from emp where cast((empno + (10/2)) as int) = 13]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
  FilterRel(condition=[=(CAST(+($0, /(10, 2))):INTEGER NOT NULL, 13)])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
  FilterRel(condition=[=(+($0, 5), 13)])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceConstantsCalc">
        <Resource name="sql">
            <![CDATA[select * from (
  select upper(substring(x FROM 1 FOR 2) || substring(x FROM 3)) as u,
      substring(x FROM 1 FOR 1) as s
  from (
    select 'table' as x from (values (true))
    union
    select 'view' from (values (true))
    union
    select 'foreign table' from (values (true))
  )
) where u = 'TABLE']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(U=[$0], S=[$1])
  FilterRel(condition=[=($0, 'TABLE')])
    ProjectRel(U=[UPPER(||(SUBSTRING($0, 1, 2), SUBSTRING($0, 3)))], S=[SUBSTRING($0, 1, 1)])
      UnionRel(all=[false])
        UnionRel(all=[false])
          ProjectRel(X=['table'])
            ValuesRel(tuples=[[{ true }]])
          ProjectRel(EXPR$0=['view'])
            ValuesRel(tuples=[[{ true }]])
        ProjectRel(EXPR$0=['foreign table'])
          ValuesRel(tuples=[[{ true }]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
CalcRel(expr#0=[{inputs}], expr#1=['TABLE'], expr#2=['t'], U=[$t1], S=[$t2])
  ValuesRel(tuples=[[{ true }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceConstants2">
        <Resource name="sql">
            <![CDATA[select p1 is not distinct from p0 from (values (2, cast(null as integer))) as t(p0, p1)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[CAST(CASE(IS NULL($1), IS NULL($0), IS NULL($0), IS NULL($1), =($1, $0))):BOOLEAN NOT NULL])
  ProjectRel(EXPR$0=[2], EXPR$1=[null])
    OneRowRel
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[CAST(CASE(IS NULL($1), IS NULL($0), IS NULL($0), IS NULL($1), =($1, $0))):BOOLEAN NOT NULL])
  ProjectRel(EXPR$0=[2], EXPR$1=[null])
    OneRowRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testEmptyJoin">
        <Resource name="sql">
            <![CDATA[select * from (
select * from emp where false)
join dept using (deptno)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  JoinRel(condition=[=($7, $9)], joinType=[inner])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
      FilterRel(condition=[false])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  EmptyRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testEmptyJoinRight">
        <Resource name="sql">
            <![CDATA[select * from (
select * from emp where false)
right join dept using (deptno)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  JoinRel(condition=[=($7, $9)], joinType=[right])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
      FilterRel(condition=[false])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  JoinRel(condition=[=($7, $9)], joinType=[right])
    EmptyRel
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testEmptyJoinLeft">
        <Resource name="sql">
            <![CDATA[select * from (
select * from emp where false)
left join dept using (deptno)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  JoinRel(condition=[=($7, $9)], joinType=[left])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
      FilterRel(condition=[false])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  EmptyRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testEmptyLimitZero">
        <Resource name="sql">
            <![CDATA[select * from emp order by deptno limit 0]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
SortRel(sort0=[$7], dir0=[Ascending], fetch=[0])
  ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
EmptyRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testEmptySort">
        <Resource name="sql">
            <![CDATA[select * from emp where false order by deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
SortRel(sort0=[$7], dir0=[ASC])
  ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
    FilterRel(condition=[false])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
SortRel(sort0=[$7], dir0=[ASC])
  ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
    EmptyRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testEmptySortLimitZero">
        <Resource name="sql">
            <![CDATA[select * from emp order by deptno limit 0]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
SortRel(sort0=[$7], dir0=[ASC], fetch=[0])
  ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
EmptyRel
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSumConstantThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename, sum(u) from
(select *, 2 u from emp as e1 union all
 select *, 3 u from emp as e2)
group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
  ProjectRel(ENAME=[$1], U=[$9])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], U=[2])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], U=[3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
  UnionRel(all=[true])
    AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
      ProjectRel(ENAME=[$1], U=[2])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
      ProjectRel(ENAME=[$1], U=[3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSumNullConstantThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename, sum(u) from
(select *, cast(null as integer) u from emp as e1 union all
 select *, cast(null as integer) u from emp as e2)
group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
  ProjectRel(ENAME=[$1], U=[$9])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], U=[null])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], U=[null])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
  UnionRel(all=[true])
    AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
      ProjectRel(ENAME=[$1], U=[null])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
      ProjectRel(ENAME=[$1], U=[null])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSumNullableThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename, sum(mgr) from
(select * from emp as e1 union all
 select * from emp as e2)
group by ename
]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
  ProjectRel(ENAME=[$1], MGR=[$3])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
  UnionRel(all=[true])
    AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
      ProjectRel(ENAME=[$1], MGR=[$3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{0}], EXPR$1=[SUM($1)])
      ProjectRel(ENAME=[$1], MGR=[$3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSumNullableNOGBYThroughUnion">
        <Resource name="sql">
            <![CDATA[select sum(mgr) from
(select * from emp as e1 union all
 select * from emp as e2)
]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{}], EXPR$0=[SUM($0)])
  ProjectRel(MGR=[$3])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{}], EXPR$0=[SUM($0)])
  UnionRel(all=[true])
    AggregateRel(group=[{}], EXPR$0=[SUM($0)])
      ProjectRel(MGR=[$3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{}], EXPR$0=[SUM($0)])
      ProjectRel(MGR=[$3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushCountStarThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename,count(*) from
(select * from emp as e1 union all
 select * from emp as e2)
group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[COUNT()])
  ProjectRel(ENAME=[$1])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[$SUM0($1)])
  UnionRel(all=[true])
    AggregateRel(group=[{0}], EXPR$1=[COUNT()])
      ProjectRel(ENAME=[$1])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{0}], EXPR$1=[COUNT()])
      ProjectRel(ENAME=[$1])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushCountNullableThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename,count(mgr) from
(select * from emp as e1 union all
 select * from emp as e2)
group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[COUNT($1)])
  ProjectRel(ENAME=[$1], MGR=[$3])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[$SUM0($1)])
  UnionRel(all=[true])
    AggregateRel(group=[{0}], EXPR$1=[COUNT($1)])
      ProjectRel(ENAME=[$1], MGR=[$3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{0}], EXPR$1=[COUNT($1)])
      ProjectRel(ENAME=[$1], MGR=[$3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushMaxNullableThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename,max(mgr) from
(select * from emp as e1 union all
 select * from emp as e2)
group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[MAX($1)])
  ProjectRel(ENAME=[$1], MGR=[$3])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[MAX($1)])
  UnionRel(all=[true])
    AggregateRel(group=[{0}], EXPR$1=[MAX($1)])
      ProjectRel(ENAME=[$1], MGR=[$3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{0}], EXPR$1=[MAX($1)])
      ProjectRel(ENAME=[$1], MGR=[$3])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushMinThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename,min(empno) from
            (select * from emp as e1 union all
            select * from emp as e2)
            group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[MIN($1)])
  ProjectRel(ENAME=[$1], EMPNO=[$0])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[MIN($1)])
  UnionRel(all=[true])
    AggregateRel(group=[{0}], EXPR$1=[MIN($1)])
      ProjectRel(ENAME=[$1], EMPNO=[$0])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{0}], EXPR$1=[MIN($1)])
      ProjectRel(ENAME=[$1], EMPNO=[$0])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushAvgThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename,avg(empno) from
(select * from emp as e1 union all
 select * from emp as e2)
group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[AVG($1)])
  ProjectRel(ENAME=[$1], EMPNO=[$0])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[AVG($1)])
  UnionRel(all=[true])
    ProjectRel(ENAME=[$1], EMPNO=[$0])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
    ProjectRel(ENAME=[$1], EMPNO=[$0])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSumCountStarThroughUnion">
        <Resource name="sql">
            <![CDATA[select ename,sum(empno),count(*),min(deptno),max(empno) from
(select * from emp as e1 union all
 select * from emp as e2)
group by ename]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[COUNT()], EXPR$3=[MIN($2)], EXPR$4=[MAX($1)])
  ProjectRel(ENAME=[$1], EMPNO=[$0], DEPTNO=[$7])
    UnionRel(all=[true])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
AggregateRel(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[$SUM0($2)], EXPR$3=[MIN($3)], EXPR$4=[MAX($4)])
  UnionRel(all=[true])
    AggregateRel(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[COUNT()], EXPR$3=[MIN($2)], EXPR$4=[MAX($1)])
      ProjectRel(ENAME=[$1], EMPNO=[$0], DEPTNO=[$7])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    AggregateRel(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[COUNT()], EXPR$3=[MIN($2)], EXPR$4=[MAX($1)])
      ProjectRel(ENAME=[$1], EMPNO=[$0], DEPTNO=[$7])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPullConstantThroughConstLast">
        <Resource name="sql">
            <![CDATA[select deptno, max(mgr) from (
  select *, 4 as four, 2+3 as two_plus_three, deptno+42 as deptno42 from emp
) group by deptno, four]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DEPTNO=[$0], EXPR$1=[$2])
  AggregateRel(group=[{0, 1}], EXPR$1=[MAX($2)])
    ProjectRel(DEPTNO=[$7], FOUR=[$9], MGR=[$3])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], DEPTNO42=[+($7, 42)])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(DEPTNO=[$0], EXPR$1=[$1])
  AggregateRel(group=[{0}], EXPR$1=[MAX($2)])
    ProjectRel(DEPTNO=[$7], FOUR=[4], MGR=[$3])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPullConstantThroughAggregateSimpleNonNullable">
        <Resource name="sql">
            <![CDATA[select deptno, max(ename) from (
  select *, 4 as four, 2+3 as two_plus_three, deptno+42 as deptno42 from emp
) group by deptno, four]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DEPTNO=[$0], EXPR$1=[$2])
  AggregateRel(group=[{0, 1}], EXPR$1=[MAX($2)])
    ProjectRel(DEPTNO=[$7], FOUR=[$9], ENAME=[$1])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], DEPTNO42=[+($7, 42)])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(DEPTNO=[$0], EXPR$1=[$1])
  AggregateRel(group=[{0}], EXPR$1=[MAX($2)])
    ProjectRel(DEPTNO=[$7], FOUR=[4], ENAME=[$1])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPullConstantThroughAggregatePermuted">
        <Resource name="sql">
            <![CDATA[select deptno, max(mgr) from (
  select *, 4 as four, 2+3 as two_plus_three, deptno+42 as deptno42 from emp
) group by deptno, four, two_plus_three, deptno42]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DEPTNO=[$0], EXPR$1=[$4])
  AggregateRel(group=[{0, 1, 2, 3}], EXPR$1=[MAX($4)])
    ProjectRel(DEPTNO=[$7], FOUR=[$9], TWO_PLUS_THREE=[$10], DEPTNO42=[$11], MGR=[$3])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], DEPTNO42=[+($7, 42)])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(DEPTNO=[$0], EXPR$1=[$2])
  AggregateRel(group=[{0, 1}], EXPR$1=[MAX($4)])
    ProjectRel(DEPTNO=[$7], DEPTNO42=[+($7, 42)], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], MGR=[$3])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPullConstantThroughAggregatePermutedConstFirst">
        <Resource name="sql">
            <![CDATA[select deptno, max(mgr) from (
  select *, 4 as four, 2+3 as two_plus_three, deptno+42 as deptno42 from emp
) group by four, deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DEPTNO=[$1], EXPR$1=[$2])
  AggregateRel(group=[{0, 1}], EXPR$1=[MAX($2)])
    ProjectRel(FOUR=[$9], DEPTNO=[$7], MGR=[$3])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], DEPTNO42=[+($7, 42)])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(DEPTNO=[$0], EXPR$1=[$1])
  AggregateRel(group=[{0}], EXPR$1=[MAX($2)])
    ProjectRel(DEPTNO=[$7], FOUR=[4], MGR=[$3])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPullConstantThroughAggregatePermutedConstGroupBy">
        <Resource name="sql">
            <![CDATA[select deptno, max(mgr) from (
  select *, 4 as four, 2+3 as two_plus_three, deptno+42 as deptno42 from emp
) group by 42+24, deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DEPTNO=[$1], EXPR$1=[$2])
  AggregateRel(group=[{0, 1}], EXPR$1=[MAX($2)])
    ProjectRel($f0=[+(42, 24)], DEPTNO=[$7], MGR=[$3])
      ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], DEPTNO42=[+($7, 42)])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(DEPTNO=[$0], EXPR$1=[$1])
  AggregateRel(group=[{0}], EXPR$1=[MAX($2)])
    ProjectRel(DEPTNO=[$7], $f0=[+(42, 24)], MGR=[$3])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPullConstantThroughAggregateConstGroupBy">
        <Resource name="sql">
            <![CDATA[select 4, 2+3, max(mgr) from (
  select *, 4 as four, 2+3 as two_plus_three, deptno+42 as deptno42 from emp
) group by 4, 2+3]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0, 1}], EXPR$2=[MAX($2)])
  ProjectRel(EXPR$0=[4], EXPR$1=[+(2, 3)], MGR=[$3])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], DEPTNO42=[+($7, 42)])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[$0], EXPR$1=[+(2, 3)], EXPR$2=[$1])
  AggregateRel(group=[{0}], EXPR$2=[MAX($2)])
    ProjectRel(EXPR$0=[4], EXPR$1=[+(2, 3)], MGR=[$3])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPullConstantThroughAggregateAllConst">
        <Resource name="sql">
            <![CDATA[select 4, 2+3, max(five) from (
  select *, 4 as four, 2+3 as two_plus_three, 5 as five, deptno+42 as deptno42 from emp
) group by 4, 2+3]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0, 1}], EXPR$2=[MAX($2)])
  ProjectRel(EXPR$0=[4], EXPR$1=[+(2, 3)], FIVE=[$11])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], FIVE=[5], DEPTNO42=[+($7, 42)])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[$0], EXPR$1=[+(2, 3)], EXPR$2=[$1])
  AggregateRel(group=[{0}], EXPR$2=[MAX($2)])
    ProjectRel(EXPR$0=[4], EXPR$1=[+(2, 3)], FIVE=[5])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPullConstantThroughAggregateAllLiterals">
        <Resource name="sql">
            <![CDATA[select 4, 2+3, max(5) from (
  select *, 4 as four, 2+3 as two_plus_three, 5 as five, deptno+42 as deptno42 from emp
) group by 4, 2+3]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
AggregateRel(group=[{0, 1}], EXPR$2=[MAX($2)])
  ProjectRel(EXPR$0=[4], EXPR$1=[+(2, 3)], $f2=[5])
    ProjectRel(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], FOUR=[4], TWO_PLUS_THREE=[+(2, 3)], FIVE=[5], DEPTNO42=[+($7, 42)])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[$0], EXPR$1=[+(2, 3)], EXPR$2=[$1])
  AggregateRel(group=[{0}], EXPR$2=[MAX($2)])
    ProjectRel(EXPR$0=[4], EXPR$1=[+(2, 3)], $f2=[5])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testConvertMultiJoinRule">
        <Resource name="sql">
            <![CDATA[select e1.ename from emp e1, dept d, emp e2 where e1.deptno = d.deptno and d.deptno = e2.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$1])
  FilterRel(condition=[AND(=($7, $9), =($9, $18))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$1])
  MultiJoinRel(joinFilter=[AND(=($9, $18), =($7, $9))], isFullOuterJoin=[false], joinTypes=[[INNER, INNER, INNER]], outerJoinConditions=[[NULL, NULL, NULL]], projFields=[[ALL, ALL, ALL]])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testRemoveSemiJoinWithFilter">
        <Resource name="sql">
            <![CDATA[select e.ename from emp e, dept d where e.deptno = d.deptno and e.ename = 'foo']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$1])
  FilterRel(condition=[AND(=($7, $9), =($1, 'foo'))])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$1])
  JoinRel(condition=[=($7, $9)], joinType=[inner], semiJoinDone=[true])
    FilterRel(condition=[=($1, 'foo')])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testRemoveSemiJoinRight">
        <Resource name="sql">
            <![CDATA[select e1.ename from emp e1, dept d, emp e2 where e1.deptno = d.deptno and d.deptno = e2.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$1])
  FilterRel(condition=[AND(=($7, $9), =($9, $18))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$1])
  JoinRel(condition=[=($9, $18)], joinType=[inner], semiJoinDone=[true])
    JoinRel(condition=[=($7, $9)], joinType=[inner], semiJoinDone=[true])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testMergeFilterWithJoinCondition">
        <Resource name="sql">
            <![CDATA[select d.name as dname,e.ename as ename from emp e inner join dept d on e.deptno=d.deptno where d.name='Propane']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DNAME=[$10], ENAME=[$1])
  FilterRel(condition=[=($10, 'Propane')])
    JoinRel(condition=[=($7, $9)], joinType=[inner])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testConvertMultiJoinRuleOuterJoins">
        <Resource name="sql">
            <![CDATA[select * from     (select * from         (select * from             (select * from A right outer join B on a = b)             left outer join             (select * from C full outer join D on c = d)            on a = c and b = d)         right outer join         (select * from             (select * from E full outer join F on e = f)             right outer join             (select * from G left outer join H on g = h)             on e = g and f = h)         on a = e and b = f and c = g and d = h)     inner join     (select * from I inner join J on i = j)     on a = i and h = j]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(A=[$0], B=[$1], C=[$2], D=[$3], E=[$4], F=[$5], G=[$6], H=[$7], I=[$8], J=[$9])
  JoinRel(condition=[AND(=($0, $8), =($7, $9))], joinType=[inner])
    ProjectRel(A=[$0], B=[$1], C=[$2], D=[$3], E=[$4], F=[$5], G=[$6], H=[$7])
      JoinRel(condition=[AND(=($0, $4), =($1, $5), =($2, $6), =($3, $7))], joinType=[right])
        ProjectRel(A=[$0], B=[$1], C=[$2], D=[$3])
          JoinRel(condition=[AND(=($0, $2), =($1, $3))], joinType=[left])
            ProjectRel(A=[$0], B=[$1])
              JoinRel(condition=[=($0, $1)], joinType=[right])
                TableAccessRel(table=[[CATALOG, SALES, A]])
                TableAccessRel(table=[[CATALOG, SALES, B]])
            ProjectRel(C=[$0], D=[$1])
              JoinRel(condition=[=($0, $1)], joinType=[full])
                TableAccessRel(table=[[CATALOG, SALES, C]])
                TableAccessRel(table=[[CATALOG, SALES, D]])
        ProjectRel(E=[$0], F=[$1], G=[$2], H=[$3])
          JoinRel(condition=[AND(=($0, $2), =($1, $3))], joinType=[right])
            ProjectRel(E=[$0], F=[$1])
              JoinRel(condition=[=($0, $1)], joinType=[full])
                TableAccessRel(table=[[CATALOG, SALES, E]])
                TableAccessRel(table=[[CATALOG, SALES, F]])
            ProjectRel(G=[$0], H=[$1])
              JoinRel(condition=[=($0, $1)], joinType=[left])
                TableAccessRel(table=[[CATALOG, SALES, G]])
                TableAccessRel(table=[[CATALOG, SALES, H]])
    ProjectRel(I=[$0], J=[$1])
      JoinRel(condition=[=($0, $1)], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, I]])
        TableAccessRel(table=[[CATALOG, SALES, J]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
MultiJoinRel(joinFilter=[AND(AND(=($0, $8), =($7, $9)), =($8, $9))], isFullOuterJoin=[false], joinTypes=[[RIGHT, RIGHT, INNER, LEFT, INNER, INNER]], outerJoinConditions=[[AND(=($0, $4), =($1, $5), =($2, $6), =($3, $7)), AND(=($4, $6), =($5, $7)), NULL, =($6, $7), NULL, NULL]], projFields=[[ALL, ALL, ALL, ALL, ALL, ALL]])
  MultiJoinRel(joinFilter=[true], isFullOuterJoin=[false], joinTypes=[[RIGHT, INNER, LEFT]], outerJoinConditions=[[=($0, $1), NULL, AND(=($0, $2), =($1, $3))]], projFields=[[ALL, ALL, ALL]])
    TableAccessRel(table=[[CATALOG, SALES, A]])
    TableAccessRel(table=[[CATALOG, SALES, B]])
    MultiJoinRel(joinFilter=[=($0, $1)], isFullOuterJoin=[true], joinTypes=[[INNER, INNER]], outerJoinConditions=[[NULL, NULL]], projFields=[[ALL, ALL]])
      TableAccessRel(table=[[CATALOG, SALES, C]])
      TableAccessRel(table=[[CATALOG, SALES, D]])
  MultiJoinRel(joinFilter=[=($0, $1)], isFullOuterJoin=[true], joinTypes=[[INNER, INNER]], outerJoinConditions=[[NULL, NULL]], projFields=[[ALL, ALL]])
    TableAccessRel(table=[[CATALOG, SALES, E]])
    TableAccessRel(table=[[CATALOG, SALES, F]])
  TableAccessRel(table=[[CATALOG, SALES, G]])
  TableAccessRel(table=[[CATALOG, SALES, H]])
  TableAccessRel(table=[[CATALOG, SALES, I]])
  TableAccessRel(table=[[CATALOG, SALES, J]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSemiJoinPastJoinRuleLeft">
        <Resource name="sql">
            <![CDATA[select e1.ename from emp e1, dept d, emp e2 where e1.deptno = d.deptno and e1.empno = e2.empno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$1])
  FilterRel(condition=[AND(=($7, $9), =($0, $11))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$1])
  JoinRel(condition=[=($0, $11)], joinType=[inner], semiJoinDone=[true])
    JoinRel(condition=[=($7, $9)], joinType=[inner], semiJoinDone=[true])
      SemiJoinRel(condition=[=($0, $9)], joinType=[inner])
        SemiJoinRel(condition=[=($7, $9)], joinType=[inner])
          TableAccessRel(table=[[CATALOG, SALES, EMP]])
          TableAccessRel(table=[[CATALOG, SALES, DEPT]])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSemiJoinPastJoinRuleRight">
        <Resource name="sql">
            <![CDATA[select e1.ename from emp e1, dept d, emp e2 where e1.deptno = d.deptno and d.deptno = e2.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$1])
  FilterRel(condition=[AND(=($7, $9), =($9, $18))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$1])
  JoinRel(condition=[=($9, $18)], joinType=[inner], semiJoinDone=[true])
    JoinRel(condition=[=($7, $9)], joinType=[inner], semiJoinDone=[true])
      SemiJoinRel(condition=[=($7, $9)], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
      SemiJoinRel(condition=[=($0, $9)], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testRemoveSemiJoin">
        <Resource name="sql">
            <![CDATA[select e.ename from emp e, dept d where e.deptno = d.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$1])
  FilterRel(condition=[=($7, $9)])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$1])
  JoinRel(condition=[=($7, $9)], joinType=[inner], semiJoinDone=[true])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSemiJoinPastProject">
        <Resource name="sql">
            <![CDATA[select e.* from (select ename, trim(job), sal * 2, deptno from emp) e, dept d where e.deptno = d.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$0], EXPR$1=[$1], EXPR$2=[$2], DEPTNO=[$3])
  FilterRel(condition=[=($3, $4)])
    JoinRel(condition=[true], joinType=[inner])
      ProjectRel(ENAME=[$1], EXPR$1=[TRIM(FLAG(BOTH), ' ', $2)], EXPR$2=[*($5, 2)], DEPTNO=[$7])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$0], EXPR$1=[$1], EXPR$2=[$2], DEPTNO=[$3])
  JoinRel(condition=[=($3, $4)], joinType=[inner], semiJoinDone=[true])
    ProjectRel(ENAME=[$1], EXPR$1=[TRIM(FLAG(BOTH), ' ', $2)], EXPR$2=[*($5, 2)], DEPTNO=[$7])
      SemiJoinRel(condition=[=($7, $9)], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSemiJoinPastFilter">
        <Resource name="sql">
            <![CDATA[select e.ename from emp e, dept d where e.deptno = d.deptno and e.ename = 'foo']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$1])
  FilterRel(condition=[AND(=($7, $9), =($1, 'foo'))])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$1])
  JoinRel(condition=[=($7, $9)], joinType=[inner], semiJoinDone=[true])
    FilterRel(condition=[=($1, 'foo')])
      SemiJoinRel(condition=[=($7, $9)], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    TableAccessRel(table=[[CATALOG, SALES, DEPT]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testRemoveSemiJoinRightWithFilter">
        <Resource name="sql">
            <![CDATA[select e1.ename from emp e1, dept d, emp e2 where e1.deptno = d.deptno and d.deptno = e2.deptno and d.name = 'foo']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(ENAME=[$1])
  FilterRel(condition=[AND(=($7, $9), =($9, $18), =($10, 'foo'))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[CATALOG, SALES, EMP]])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(ENAME=[$1])
  JoinRel(condition=[=($9, $18)], joinType=[inner], semiJoinDone=[true])
    JoinRel(condition=[=($7, $9)], joinType=[inner], semiJoinDone=[true])
      TableAccessRel(table=[[CATALOG, SALES, EMP]])
      FilterRel(condition=[=($1, 'foo')])
        TableAccessRel(table=[[CATALOG, SALES, DEPT]])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testHeterogeneousConversion">
        <Resource name="sql">
            <![CDATA[select upper(ename) from emp union all select lower(ename) from emp]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
UnionRel(all=[true])
  ProjectRel(EXPR$0=[UPPER($1)])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
  ProjectRel(EXPR$0=[LOWER($1)])
    TableAccessRel(table=[[CATALOG, SALES, EMP]])
]]>
        </Resource>
    </TestCase>
</Root>
