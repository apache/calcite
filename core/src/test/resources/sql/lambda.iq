# lambda.iq - Queries involving functions with lambda as arguments
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
!use sparkfunc
!set outputformat mysql

# EXISTS
select "EXISTS"(array(1,2,3), x -> x = 2);
+--------+
| EXPR$0 |
+--------+
| true   |
+--------+
(1 row)

!ok

select "EXISTS"(array(1,2,3), x -> x = 4);
+--------+
| EXPR$0 |
+--------+
| false  |
+--------+
(1 row)

!ok

select "EXISTS"(array(1,2,3), x -> x > 2 and x < 4);
+--------+
| EXPR$0 |
+--------+
| true   |
+--------+
(1 row)

!ok

select "EXISTS"(array(1,2,3), x -> power(x, 2) = 9);
+--------+
| EXPR$0 |
+--------+
| true   |
+--------+
(1 row)

!ok

select "EXISTS"(array(-1,-2,-3), x -> abs(x) = 0);
+--------+
| EXPR$0 |
+--------+
| false  |
+--------+
(1 row)

!ok

select "EXISTS"(array(1,2,3), x -> cast(null as boolean));
+--------+
| EXPR$0 |
+--------+
|        |
+--------+
(1 row)

!ok

select "EXISTS"(cast(null as integer array), x -> cast(null as boolean));
+--------+
| EXPR$0 |
+--------+
|        |
+--------+
(1 row)

!ok

select "EXISTS"(array[1, 2, 3], 1);
Cannot apply 'EXISTS' to arguments of type 'EXISTS(<INTEGER ARRAY>, <INTEGER>)'
!error

select "EXISTS"(array[array[1, 2], array[3, 4]], x -> x[1] = 1);
+--------+
| EXPR$0 |
+--------+
| true   |
+--------+
(1 row)

!ok
