#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Resources for the Apache Calcite project.
# See wrapper class org.apache.calcite.runtime.CalciteResource.
#
ParserContext=line {0,number,#}, column {1,number,#}
BangEqualNotAllowed=Bang equal ''!='' is not allowed under the current SQL conformance level
PercentRemainderNotAllowed=Percent remainder ''%'' is not allowed under the current SQL conformance level
LimitStartCountNotAllowed=''LIMIT start, count'' is not allowed under the current SQL conformance level
ApplyNotAllowed=APPLY operator is not allowed under the current SQL conformance level
JsonPathMustBeSpecified=JSON path expression must be specified after the JSON value expression
IllegalLiteral=Illegal {0} literal {1}: {2}
IdentifierTooLong=Length of identifier ''{0}'' must be less than or equal to {1,number,#} characters
BadFormat=not in format ''{0}''
BetweenWithoutAnd=BETWEEN operator has no terminating AND
GeometryDisabled=Geo-spatial extensions and the GEOMETRY data type are not enabled
IllegalIntervalLiteral=Illegal INTERVAL literal {0}; at {1}
IllegalMinusDate=Illegal expression. Was expecting "(DATETIME - DATETIME) INTERVALQUALIFIER"
IllegalOverlaps=Illegal overlaps expression. Was expecting expression on the form "(DATETIME, EXPRESSION) OVERLAPS (DATETIME, EXPRESSION)"
IllegalNonQueryExpression=Non-query expression encountered in illegal context
IllegalQueryExpression=Query expression encountered in illegal context
IllegalCursorExpression=CURSOR expression encountered in illegal context
IllegalOrderBy=ORDER BY unexpected
IllegalBinaryString=Illegal binary string {0}
IllegalFromEmpty=''FROM'' without operands preceding it is illegal
IllegalRowExpression=ROW expression encountered in illegal context
IllegalColon=Illegal identifier '':''. Was expecting ''VALUE''
InvalidSampleSize=TABLESAMPLE percentage must be between 0 and 100, inclusive
UnknownCharacterSet=Unknown character set ''{0}''
CharsetEncoding=Failed to encode ''{0}'' in character set ''{1}''
UnicodeEscapeCharLength=UESCAPE ''{0}'' must be exactly one character
UnicodeEscapeCharIllegal=UESCAPE ''{0}'' may not be hex digit, whitespace, plus sign, or double quote
UnicodeEscapeUnexpected=UESCAPE cannot be specified without Unicode literal introducer
UnicodeEscapeMalformed=Unicode escape sequence starting at character {0,number,#} is not exactly four hex digits
ValidatorUnknownFunction=No match found for function signature {0}
InvalidArgCount=Invalid number of arguments to function ''{0}''. Was expecting {1,number,#} arguments
ValidatorContextPoint=At line {0,number,#}, column {1,number,#}
ValidatorContext=From line {0,number,#}, column {1,number,#} to line {2,number,#}, column {3,number,#}
CannotCastValue=Cast function cannot convert value of type {0} to type {1}
UnknownDatatypeName=Unknown datatype name ''{0}''
IncompatibleValueType=Values passed to {0} operator must have compatible types
IncompatibleTypesInList=Values in expression list must have compatible types
IncompatibleCharset=Cannot apply {0} to the two different charsets {1} and {2}
InvalidOrderByPos=ORDER BY is only allowed on top-level SELECT
UnknownIdentifier=Unknown identifier ''{0}''
UnknownField=Unknown field ''{0}''
UnknownTargetColumn=Unknown target column ''{0}''
DuplicateTargetColumn=Target column ''{0}'' is assigned more than once
UnmatchInsertColumn=Number of INSERT target columns ({0,number}) does not equal number of source items ({1,number})
ColumnNotNullable=Column ''{0}'' has no default value and does not allow NULLs
TypeNotAssignable=Cannot assign to target field ''{0}'' of type {1} from source field ''{2}'' of type {3}
TableNameNotFound=Table ''{0}'' not found
TableNotFound=Table ''{0}'' not found
TableNameNotFoundDidYouMean=Table ''{0}'' not found; did you mean ''{1}''?
ObjectNotFound=Object ''{0}'' not found
ObjectNotFoundWithin=Object ''{0}'' not found within ''{1}''
ObjectNotFoundDidYouMean=Object ''{0}'' not found; did you mean ''{1}''?
ObjectNotFoundWithinDidYouMean=Object ''{0}'' not found within ''{1}''; did you mean ''{2}''?
NotASequence=Table ''{0}'' is not a sequence
ColumnNotFound=Column ''{0}'' not found in any table
ColumnNotFoundDidYouMean=Column ''{0}'' not found in any table; did you mean ''{1}''?
ColumnNotFoundInTable=Column ''{0}'' not found in table ''{1}''
ColumnNotFoundInTableDidYouMean=Column ''{0}'' not found in table ''{1}''; did you mean ''{2}''?
ColumnAmbiguous=Column ''{0}'' is ambiguous
ParamNotFoundInFunctionDidYouMean = Param ''{0}'' not found in function ''{1}''; did you mean ''{2}''?
NeedQueryOp=Operand {0} must be a query
NeedSameTypeParameter=Parameters must be of the same type
CanNotApplyOp2Type=Cannot apply ''{0}'' to arguments of type {1}. Supported form(s): {2}
ExpectedBoolean=Expected a boolean type
ExpectedCharacter=Expected a character type
MustNotNullInElse=ELSE clause or at least one THEN clause must be non-NULL
FunctionUndefined=Function ''{0}'' is not defined
WrongNumberOfParam=Encountered {0} with {1,number} parameter(s); was expecting {2}
IllegalMixingOfTypes=Illegal mixing of types in CASE or COALESCE statement
InvalidCompare=Invalid compare. Comparing (collation, coercibility): ({0}, {1} with ({2}, {3}) is illegal
DifferentCollations=Invalid syntax. Two explicit different collations ({0}, {1}) are illegal
TypeNotComparable={0} is not comparable to {1}
TypeNotComparableNear=Cannot compare values of types ''{0}'', ''{1}''
WrongNumOfArguments=Wrong number of arguments to expression
OperandNotComparable=Operands {0} not comparable to each other
TypeNotComparableEachOther=Types {0} not comparable to each other
NumberLiteralOutOfRange=Numeric literal ''{0}'' out of range
DateLiteralOutOfRange=Date literal ''{0}'' out of range
StringFragsOnSameLine=String literal continued on same line
AliasMustBeSimpleIdentifier=Table or column alias must be a simple identifier
CharLiteralAliasNotValid=Expecting alias, found character literal
AliasListDegree=List of column aliases must have same degree as table; table has {0,number,#} columns {1}, whereas alias list has {2,number,#} columns
AliasListDuplicate=Duplicate name ''{0}'' in column alias list
JoinRequiresCondition=INNER, LEFT, RIGHT or FULL join requires a condition (NATURAL keyword or ON or USING clause)
DisallowsQualifyingCommonColumn=Cannot qualify common column ''{0}''
CrossJoinDisallowsCondition=Cannot specify condition (NATURAL keyword, or ON or USING clause) following CROSS JOIN
NaturalDisallowsOnOrUsing=Cannot specify NATURAL keyword with ON or USING clause
ColumnInUsingNotUnique=Column name ''{0}'' in USING clause is not unique on one side of join
NaturalOrUsingColumnNotCompatible=Column ''{0}'' matched using NATURAL keyword or USING clause has incompatible types: cannot compare ''{1}'' to ''{2}''
WindowNotFound=Window ''{0}'' not found
DisallowsNullTreatment=Cannot specify IGNORE NULLS or RESPECT NULLS following ''{0}''
NotGroupExpr=Expression ''{0}'' is not being grouped
GroupingArgument=Argument to {0} operator must be a grouped expression
GroupingInAggregate={0} operator may only occur in an aggregate query
GroupingInWrongClause={0} operator may only occur in SELECT, HAVING or ORDER BY clause
NotSelectDistinctExpr=Expression ''{0}'' is not in the select clause
AggregateIllegalInClause=Aggregate expression is illegal in {0} clause
WindowedAggregateIllegalInClause=Windowed aggregate expression is illegal in {0} clause
NestedAggIllegal=Aggregate expressions cannot be nested
AggregateInFilterIllegal=FILTER must not contain aggregate expression
AggregateInWithinGroupIllegal=WITHIN GROUP must not contain aggregate expression
AggregateInWithinDistinctIllegal=WITHIN DISTINCT must not contain aggregate expression
AggregateMissingWithinGroupClause=Aggregate expression ''{0}'' must contain a WITHIN GROUP clause
WithinGroupClauseIllegalInAggregate=Aggregate expression ''{0}'' must not contain a WITHIN GROUP clause
AggregateIllegalInOrderBy=Aggregate expression is illegal in ORDER BY clause of non-aggregating SELECT
CondMustBeBoolean={0} clause must be a condition
HavingMustBeBoolean=HAVING clause must be a condition
OverNonAggregate=OVER must be applied to aggregate function
FilterNonAggregate=FILTER must be applied to aggregate function
CannotOverrideWindowAttribute=Cannot override window attribute
ColumnCountMismatchInSetop=Column count mismatch in {0}
ColumnTypeMismatchInSetop=Type mismatch in column {0,number} of {1}
BinaryLiteralOdd=Binary literal string must contain an even number of hexits
BinaryLiteralInvalid=Binary literal string must contain only characters ''0'' - ''9'', ''A'' - ''F''
InvalidLiteral=Literal ''{0}'' can not be parsed to type ''{1}''
UnsupportedIntervalLiteral=Illegal interval literal format {0} for {1}
IntervalFieldExceedsPrecision=Interval field value {0,number} exceeds precision of {1} field
CompoundOrderByProhibitsRange=RANGE clause cannot be used with compound ORDER BY clause
OrderByDataTypeProhibitsRange=Data type of ORDER BY prohibits use of RANGE clause
OrderByRangeMismatch=Data Type mismatch between ORDER BY and RANGE clause
DateRequiresInterval=Window ORDER BY expression of type DATE requires range of type INTERVAL
RowMustBeNonNegativeIntegral=ROWS value must be a non-negative integral constant
OverMissingOrderBy=Window specification must contain an ORDER BY clause
PartitionbyShouldNotContainOver=PARTITION BY expression should not contain OVER clause
OrderbyShouldNotContainOver=ORDER BY expression should not contain OVER clause
AbsentOverClause=OVER clause is necessary for window functions
BadLowerBoundary=UNBOUNDED FOLLOWING cannot be specified for the lower frame boundary
BadUpperBoundary=UNBOUNDED PRECEDING cannot be specified for the upper frame boundary
CurrentRowPrecedingError=Upper frame boundary cannot be PRECEDING when lower boundary is CURRENT ROW
CurrentRowFollowingError=Upper frame boundary cannot be CURRENT ROW when lower boundary is FOLLOWING
FollowingBeforePrecedingError=Upper frame boundary cannot be PRECEDING when lower boundary is FOLLOWING
WindowNameMustBeSimple=Window name must be a simple identifier
DuplicateWindowName=Duplicate window names not allowed
EmptyWindowSpec=Empty window specification not allowed
DupWindowSpec=Duplicate window specification not allowed in the same window clause
RankWithFrame=ROW/RANGE not allowed with RANK, DENSE_RANK or ROW_NUMBER functions
FuncNeedsOrderBy=RANK or DENSE_RANK functions require ORDER BY clause in window specification
PartitionNotAllowed=PARTITION BY not allowed with existing window reference
OrderByOverlap=ORDER BY not allowed in both base and referenced windows
RefWindowWithFrame=Referenced window cannot have framing declarations
TypeNotSupported=Type ''{0}'' is not supported
UnsupportedTypeInOrderBy=Invalid type ''{0}'' in ORDER BY clause of ''{1}'' function. Only NUMERIC types are supported
OrderByRequiresOneKey=''{0}'' requires precisely one ORDER BY key
FunctionQuantifierNotAllowed=DISTINCT/ALL not allowed with {0} function
WithinGroupNotAllowed=WITHIN GROUP not allowed with {0} function
WithinDistinctNotAllowed=WITHIN DISTINCT not allowed with {0} function
SomeButNotAllArgumentsAreNamed=Some but not all arguments are named
DuplicateArgumentName=Duplicate argument name ''{0}''
DefaultForOptionalParameter=DEFAULT is only allowed for optional parameters
DefaultNotAllowed=DEFAULT not allowed here
AccessNotAllowed=Not allowed to perform {0} on {1}
MinMaxBadType=The {0} function does not support the {1} data type.
OnlyScalarSubQueryAllowed=Only scalar sub-queries allowed in select list.
OrderByOrdinalOutOfRange=Ordinal out of range
WindowHasNegativeSize=Window has negative size
UnboundedFollowingWindowNotSupported=UNBOUNDED FOLLOWING window not supported
CannotUseDisallowPartialWithRange=Cannot use DISALLOW PARTIAL with window based on RANGE
IntervalStartPrecisionOutOfRange=Interval leading field precision ''{0,number,#}'' out of range for {1}
IntervalFractionalSecondPrecisionOutOfRange=Interval fractional second precision ''{0,number,#}'' out of range for {1}
FromAliasDuplicate=Duplicate relation name ''{0}'' in FROM clause
DuplicateColumnName=Duplicate column name ''{0}'' in output
Internal=Internal error: {0}
ArgumentMustBeLiteral=Argument to function ''{0}'' must be a literal
ArgumentMustBePositiveInteger=Argument to function ''{0}'' must be a positive integer literal
ArgumentMustBeNumericLiteralInRange=Argument to function ''{0}'' must be a numeric literal between {1,number,#} and {2,number,#}
ValidationError=Validation Error: {0}
IllegalLocaleFormat=Locale ''{0}'' in an illegal format
ArgumentMustNotBeNull=Argument to function ''{0}'' must not be NULL
NullIllegal=Illegal use of ''NULL''
DynamicParamIllegal=Illegal use of dynamic parameter
InvalidBoolean=''{0}'' is not a valid boolean value
ArgumentMustBeValidPrecision=Argument to function ''{0}'' must be a valid precision between ''{1,number,#}'' and ''{2,number,#}''
IllegalArgumentForTableFunctionCall=Wrong arguments for table function ''{0}'' call. Expected ''{1}'', actual ''{2}''
CannotCallTableFunctionHere=Cannot call table function here: ''{0}''
InvalidDatetimeFormat=''{0}'' is not a valid datetime format
InsertIntoAlwaysGenerated=Cannot INSERT into generated column ''{0}''
ArgumentMustHaveScaleZero=Argument to function ''{0}'' must have a scale of 0
PreparationAborted=Statement preparation aborted
NonStandardFeatureUsed=Warning: use of non-standard feature ''{0}''
SQLFeature_E051_01=SELECT DISTINCT not supported
SQLFeature_E071_03=EXCEPT not supported
SQLFeature_E101_03=UPDATE not supported
SQLFeature_E151=Transactions not supported
SQLFeature_F302=INTERSECT not supported
SQLFeature_F312=MERGE not supported
SQLFeature_S271=Basic multiset not supported
SQLFeature_T613=TABLESAMPLE not supported
SQLConformance_MultipleActiveAutocommitStatements=Execution of a new autocommit statement while a cursor is still open on same connection is not supported
SQLConformance_OrderByDesc=Descending sort (ORDER BY DESC) not supported
SharedStatementPlans=Sharing of cached statement plans not supported
SQLFeatureExt_T613_Substitution=TABLESAMPLE SUBSTITUTE not supported
PersonalityManagesRowCount=Personality does not maintain table''s row count in the catalog
PersonalitySupportsSnapshots=Personality does not support snapshot reads
PersonalitySupportsLabels=Personality does not support labels
DuplicateNameInColumnList=Duplicate name ''{0}'' in column list
RequireAtLeastOneArg=Require at least 1 argument
MapRequiresTwoOrMoreArgs=Map requires at least 2 arguments
MapRequiresEvenArgCount=Map requires an even number of arguments
IncompatibleTypes=Incompatible types
ColumnCountMismatch=Number of columns must match number of query columns
DuplicateColumnAndNoColumnList=Column has duplicate column name ''{0}'' and no column list specified
RequireDefaultConstructor=Declaring class ''{0}'' of non-static user-defined function must have a public constructor with zero parameters
FirstParameterOfAdd=In user-defined aggregate class ''{0}'', first parameter to ''add'' method must be the accumulator (the return type of the ''init'' method)
FilterableTableInventedFilter=FilterableTable.scan returned a filter that was not in the original list: {0}
FilterableTableScanReturnedNull=FilterableTable.scan must not return null
CannotConvertToStream=Cannot convert table ''{0}'' to stream
CannotConvertToRelation=Cannot convert stream ''{0}'' to relation
StreamMustGroupByMonotonic=Streaming aggregation requires at least one monotonic expression in GROUP BY clause
StreamMustOrderByMonotonic=Streaming ORDER BY must start with monotonic expression
StreamSetOpInconsistentInputs=Set operator cannot combine streaming and non-streaming inputs
CannotStreamValues=Cannot stream VALUES
CyclicDefinition=Cannot resolve ''{0}''; it references view ''{1}'', whose definition is cyclic
ModifiableViewMustBeBasedOnSingleTable=Modifiable view must be based on a single table
ModifiableViewMustHaveOnlyEqualityPredicates=Modifiable view must be predicated only on equality expressions
MoreThanOneMappedColumn=View is not modifiable. More than one expression maps to column ''{0}'' of base table ''{1}''
NoValueSuppliedForViewColumn=View is not modifiable. No value is supplied for NOT NULL column ''{0}'' of base table ''{1}''
ViewConstraintNotSatisfied=Modifiable view constraint is not satisfied for column ''{0}'' of base table ''{1}''
StarRequiresRecordType=Not a record type. The ''*'' operator requires a record
FilterMustBeBoolean=FILTER expression must be of type BOOLEAN
CannotStreamResultsForNonStreamingInputs=Cannot stream results of a query with no streaming inputs: ''{0}''. At least one input should be convertible to a stream
MinusNotAllowed=MINUS is not allowed under the current SQL conformance level
SelectMissingFrom=SELECT must have a FROM clause
GroupFunctionMustAppearInGroupByClause=Group function ''{0}'' can only appear in GROUP BY clause
AuxiliaryWithoutMatchingGroupCall=Call to auxiliary group function ''{0}'' must have matching call to group function ''{1}'' in GROUP BY clause
PivotAggMalformed=Measure expression in PIVOT must use aggregate function
PivotValueArityMismatch=Value count in PIVOT ({0,number,#}) must match number of FOR columns ({1,number,#})
UnpivotDuplicate=Duplicate column name ''{0}'' in UNPIVOT
UnpivotValueArityMismatch=Value count in UNPIVOT ({0,number,#}) must match number of FOR columns ({1,number,#})
UnpivotCannotDeriveMeasureType=In UNPIVOT, cannot derive type for measure ''{0}'' because source columns have different data types
UnpivotCannotDeriveAxisType=In UNPIVOT, cannot derive type for axis ''{0}''
PatternVarAlreadyDefined=Pattern variable ''{0}'' has already been defined
PatternPrevFunctionInMeasure=Cannot use PREV/NEXT in MEASURE ''{0}''
PatternPrevFunctionOrder=Cannot nest PREV/NEXT under LAST/FIRST ''{0}''
PatternAggregationInNavigation=Cannot use aggregation in navigation ''{0}''
PatternCountFunctionArg=Invalid number of parameters to COUNT method
IllegalExpressionForTemporal=The system time period specification expects Timestamp type but is ''{0}''
NotTemporalTable=Table ''{0}'' is not a temporal table, can not be queried in system time period specification
PatternRunningFunctionInDefine=Cannot use RUNNING/FINAL in DEFINE ''{0}''
PatternFunctionVariableCheck=Multiple pattern variables in ''{0}''
FunctionMatchRecognizeOnly=Function ''{0}'' can only be used in MATCH_RECOGNIZE
PatternFunctionNullCheck=Null parameters in ''{0}''
UnknownPattern=Unknown pattern ''{0}''
IntervalMustBeNonNegative=Interval must be non-negative ''{0}''
CannotUseWithinWithoutOrderBy=Must contain an ORDER BY clause when WITHIN is used
FirstColumnOfOrderByMustBeTimestamp=First column of ORDER BY must be of type TIMESTAMP
ExtendNotAllowed=Extended columns not allowed under the current SQL conformance level
RolledUpNotAllowed=Rolled up column ''{0}'' is not allowed in {1}
SchemaExists=Schema ''{0}'' already exists
SchemaInvalidType=Invalid schema type ''{0}''; valid values: {1}
TableExists=Table ''{0}'' already exists
CreateTableRequiresColumnList=Missing column list
CreateTableRequiresColumnTypes=Type required for column ''{0}'' in CREATE TABLE without AS
ViewExists=View ''{0}'' already exists and REPLACE not specified
SchemaNotFound=Schema ''{0}'' not found
ViewNotFound=View ''{0}'' not found
TypeNotFound=Type ''{0}'' not found
FunctionNotFound=Function ''{0}'' not found
DialectDoesNotSupportFeature=Dialect does not support feature: ''{0}''
IllegalNegativeSubstringLength=Substring error: negative substring length not allowed
TrimError=Trim error: trim character must be exactly 1 character
InvalidTypesForArithmetic=Invalid types for arithmetic: {0} {1} {2}
InvalidTypesForComparison=Invalid types for comparison: {0} {1} {2}
CannotConvert=Cannot convert {0} to {1}
InvalidCharacterForCast=Invalid character for cast: {0}
MoreThanOneValueInList=More than one value in list: {0}
FailedToAccessField=Failed to access field ''{0}'', index {1,number,#} of object of type {2}
IllegalJsonPathSpec=Illegal jsonpath spec ''{0}'', format of the spec should be: ''<lax|strict> $'{'expr'}'''
IllegalJsonPathMode=Illegal jsonpath mode ''{0}''
IllegalJsonPathModeInPathSpec=Illegal jsonpath mode ''{0}'' in jsonpath spec: ''{1}''
StrictPathModeRequiresNonEmptyValue=Strict jsonpath mode requires a non empty returned value, but is null
IllegalErrorBehaviorInJsonExistsFunc=Illegal error behavior ''{0}'' specified in JSON_EXISTS function
EmptyResultOfJsonValueFuncNotAllowed=Empty result of JSON_VALUE function is not allowed
IllegalEmptyBehaviorInJsonValueFunc=Illegal empty behavior ''{0}'' specified in JSON_VALUE function
IllegalErrorBehaviorInJsonValueFunc=Illegal error behavior ''{0}'' specified in JSON_VALUE function
ScalarValueRequiredInStrictModeOfJsonValueFunc=Strict jsonpath mode requires scalar value, and the actual value is: ''{0}''
IllegalWrapperBehaviorInJsonQueryFunc=Illegal wrapper behavior ''{0}'' specified in JSON_QUERY function
EmptyResultOfJsonQueryFuncNotAllowed=Empty result of JSON_QUERY function is not allowed
IllegalEmptyBehaviorInJsonQueryFunc=Illegal empty behavior ''{0}'' specified in JSON_VALUE function
ArrayOrObjectValueRequiredInStrictModeOfJsonQueryFunc=Strict jsonpath mode requires array or object value, and the actual value is: ''{0}''
IllegalErrorBehaviorInJsonQueryFunc=Illegal error behavior ''{0}'' specified in JSON_VALUE function
NullKeyOfJsonObjectNotAllowed=Null key of JSON object is not allowed
QueryExecutionTimeoutReached=Timeout of ''{0}'' ms for query execution is reached. Query execution started at ''{1}''
AmbiguousSortOrderInJsonArrayAggFunc=Including both WITHIN GROUP(...) and inside ORDER BY in a single JSON_ARRAYAGG call is not allowed
ExceptionWhilePerformingQueryOnJdbcSubSchema = While executing SQL [{0}] on JDBC sub-schema
InvalidInputForJsonType=Not a valid input for JSON_TYPE: ''{0}''
InvalidInputForJsonDepth=Not a valid input for JSON_DEPTH: ''{0}''
ExceptionWhileSerializingToJson=Cannot serialize object to JSON: ''{0}''
InvalidInputForJsonLength=Not a valid input for JSON_LENGTH: ''{0}''
InvalidInputForJsonKeys=Not a valid input for JSON_KEYS: ''{0}''
InvalidInputForJsonRemove=Invalid input for JSON_REMOVE: document: ''{0}'', jsonpath expressions: ''{1}''
InvalidInputForJsonStorageSize=Not a valid input for JSON_STORAGE_SIZE: ''{0}''
InvalidInputForRegexpReplace=Not a valid input for REGEXP_REPLACE: ''{0}''
IllegalXslt=Illegal xslt specified : ''{0}''
InvalidInputForXmlTransform=Invalid input for XMLTRANSFORM xml: ''{0}''
InvalidInputForExtractValue=Invalid input for EXTRACTVALUE: xml: ''{0}'', xpath expression: ''{1}''
InvalidInputForExtractXml=Invalid input for EXTRACT xpath: ''{0}'', namespace: ''{1}''
InvalidInputForExistsNode=Invalid input for EXISTSNODE xpath: ''{0}'', namespace: ''{1}''
DifferentLengthForBitwiseOperands=Different length for bitwise operands: the first: {0,number,#}, the second: {1,number,#}
# End CalciteResource.properties
