# type.iq - Type DDL
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
!use server
!set outputformat mysql

create type myint1 as int;
(0 rows modified)

!update

# Create a basic table
create table t (i myint1 not null, j int not null);
(0 rows modified)

!update

select * from t;
I INTEGER(10) NOT NULL
J INTEGER(10) NOT NULL
!type

insert into t values (1, 2);
(1 row modified)

!update

select * from t;
+---+---+
| I | J |
+---+---+
| 1 | 2 |
+---+---+
(1 row)

!ok


# Create a table with complex structure type
# This is to test struct type inference in
# <a href="https://issues.apache.org/jira/browse/CALCITE-2468">[CALCITE-2468]

create type mytype1 as (ii int not null);
(0 rows modified)

!update

# Create a complex table
create table v (i int not null, j mytype1 not null);
(0 rows modified)

!update

select i AS myInt, j AS myStruct from v;
MYINT INTEGER(10) NOT NULL
MYSTRUCT STRUCT NOT NULL
!type


# Create a table with nullable complex structure type
# This is to test nullability for columns of structured types
# <a href="https://issues.apache.org/jira/browse/CALCITE-2464">[CALCITE-2464]

# Create a complex table
create table w (i int not null, j mytype1);
(0 rows modified)

!update

select i AS myInt, j AS myNullableStruct from w;
MYINT INTEGER(10) NOT NULL
MYNULLABLESTRUCT STRUCT
!type

insert into w values (1, NULL);
(1 row modified)

!update

select * from w;
+---+---+
| I | J |
+---+---+
| 1 |   |
+---+---+
(1 row)

!ok

drop table t;
drop table v;
drop table w;
(0 rows modified)

!update

# End type.iq
